{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://treemap-example/./src/DirectionEnum.js","webpack://treemap-example/./src/Graphics/Point.js","webpack://treemap-example/./src/Graphics/CanvaFacade.js","webpack://treemap-example/./src/Graphics/Rect.js","webpack://treemap-example/./src/Helpers/CalcCoordinateHelper.js","webpack://treemap-example/./src/Model/Value.js","webpack://treemap-example/./src/Tree/Node.js","webpack://treemap-example/./src/Tree/Tree.js","webpack://treemap-example/./src/Graph.js","webpack://treemap-example/./node_modules/chroma-js/src/utils/limit.js","webpack://treemap-example/./node_modules/chroma-js/src/utils/clip_rgb.js","webpack://treemap-example/./node_modules/chroma-js/src/utils/type.js","webpack://treemap-example/./node_modules/chroma-js/src/utils/unpack.js","webpack://treemap-example/./node_modules/chroma-js/src/utils/last.js","webpack://treemap-example/./node_modules/chroma-js/src/utils/index.js","webpack://treemap-example/./node_modules/chroma-js/src/io/input.js","webpack://treemap-example/./node_modules/chroma-js/src/Color.js","webpack://treemap-example/./node_modules/chroma-js/src/chroma.js","webpack://treemap-example/./node_modules/chroma-js/src/version.js","webpack://treemap-example/./node_modules/chroma-js/src/colors/w3cx11.js","webpack://treemap-example/./node_modules/chroma-js/src/io/hex/hex2rgb.js","webpack://treemap-example/./node_modules/chroma-js/src/io/hex/rgb2hex.js","webpack://treemap-example/./node_modules/chroma-js/src/io/named/index.js","webpack://treemap-example/./node_modules/chroma-js/src/ops/alpha.js","webpack://treemap-example/./node_modules/chroma-js/src/ops/clipped.js","webpack://treemap-example/./node_modules/chroma-js/src/io/lab/lab-constants.js","webpack://treemap-example/./node_modules/chroma-js/src/io/lab/lab2rgb.js","webpack://treemap-example/./node_modules/chroma-js/src/io/lab/rgb2lab.js","webpack://treemap-example/./node_modules/chroma-js/src/io/lab/index.js","webpack://treemap-example/./node_modules/chroma-js/src/ops/darken.js","webpack://treemap-example/./node_modules/chroma-js/src/ops/get.js","webpack://treemap-example/./node_modules/chroma-js/src/ops/luminance.js","webpack://treemap-example/./node_modules/chroma-js/src/interpolator/index.js","webpack://treemap-example/./node_modules/chroma-js/src/generator/mix.js","webpack://treemap-example/./node_modules/chroma-js/src/ops/mix.js","webpack://treemap-example/./node_modules/chroma-js/src/ops/premultiply.js","webpack://treemap-example/./node_modules/chroma-js/src/io/lch/lch2lab.js","webpack://treemap-example/./node_modules/chroma-js/src/io/lch/lch2rgb.js","webpack://treemap-example/./node_modules/chroma-js/src/io/lch/lab2lch.js","webpack://treemap-example/./node_modules/chroma-js/src/io/lch/rgb2lch.js","webpack://treemap-example/./node_modules/chroma-js/src/io/lch/index.js","webpack://treemap-example/./node_modules/chroma-js/src/io/lch/hcl2rgb.js","webpack://treemap-example/./node_modules/chroma-js/src/ops/saturate.js","webpack://treemap-example/./node_modules/chroma-js/src/ops/set.js","webpack://treemap-example/./node_modules/chroma-js/src/ops/shade.js","webpack://treemap-example/./node_modules/chroma-js/src/interpolator/rgb.js","webpack://treemap-example/./node_modules/chroma-js/src/interpolator/lrgb.js","webpack://treemap-example/./node_modules/chroma-js/src/interpolator/lab.js","webpack://treemap-example/./node_modules/chroma-js/src/interpolator/_hsx.js","webpack://treemap-example/./node_modules/chroma-js/src/interpolator/lch.js","webpack://treemap-example/./node_modules/chroma-js/src/io/num/index.js","webpack://treemap-example/./node_modules/chroma-js/src/io/num/rgb2num.js","webpack://treemap-example/./node_modules/chroma-js/src/io/num/num2rgb.js","webpack://treemap-example/./node_modules/chroma-js/src/interpolator/num.js","webpack://treemap-example/./node_modules/chroma-js/src/io/hcg/hcg2rgb.js","webpack://treemap-example/./node_modules/chroma-js/src/io/hcg/index.js","webpack://treemap-example/./node_modules/chroma-js/src/io/hcg/rgb2hcg.js","webpack://treemap-example/./node_modules/chroma-js/src/interpolator/hcg.js","webpack://treemap-example/./node_modules/chroma-js/src/io/hsi/hsi2rgb.js","webpack://treemap-example/./node_modules/chroma-js/src/io/hsi/rgb2hsi.js","webpack://treemap-example/./node_modules/chroma-js/src/io/hsi/index.js","webpack://treemap-example/./node_modules/chroma-js/src/interpolator/hsi.js","webpack://treemap-example/./node_modules/chroma-js/src/io/hsl/hsl2rgb.js","webpack://treemap-example/./node_modules/chroma-js/src/io/hsl/rgb2hsl.js","webpack://treemap-example/./node_modules/chroma-js/src/io/hsl/index.js","webpack://treemap-example/./node_modules/chroma-js/src/interpolator/hsl.js","webpack://treemap-example/./node_modules/chroma-js/src/io/hsv/hsv2rgb.js","webpack://treemap-example/./node_modules/chroma-js/src/io/hsv/rgb2hsv.js","webpack://treemap-example/./node_modules/chroma-js/src/io/hsv/index.js","webpack://treemap-example/./node_modules/chroma-js/src/utils/multiply-matrices.js","webpack://treemap-example/./node_modules/chroma-js/src/interpolator/hsv.js","webpack://treemap-example/./node_modules/chroma-js/src/io/oklab/oklab2rgb.js","webpack://treemap-example/./node_modules/chroma-js/src/io/oklab/rgb2oklab.js","webpack://treemap-example/./node_modules/chroma-js/src/io/oklab/index.js","webpack://treemap-example/./node_modules/chroma-js/src/interpolator/oklab.js","webpack://treemap-example/./node_modules/chroma-js/src/interpolator/oklch.js","webpack://treemap-example/./node_modules/chroma-js/src/generator/average.js","webpack://treemap-example/./node_modules/chroma-js/src/generator/scale.js","webpack://treemap-example/./node_modules/chroma-js/src/generator/bezier.js","webpack://treemap-example/./node_modules/chroma-js/src/io/rgb/index.js","webpack://treemap-example/./node_modules/chroma-js/src/generator/blend.js","webpack://treemap-example/./node_modules/chroma-js/src/generator/cubehelix.js","webpack://treemap-example/./node_modules/chroma-js/src/generator/random.js","webpack://treemap-example/./node_modules/chroma-js/src/utils/analyze.js","webpack://treemap-example/./node_modules/chroma-js/src/utils/contrast.js","webpack://treemap-example/./node_modules/chroma-js/src/utils/contrastAPCA.js","webpack://treemap-example/./node_modules/chroma-js/src/utils/delta-e.js","webpack://treemap-example/./node_modules/chroma-js/src/utils/scales.js","webpack://treemap-example/./node_modules/chroma-js/src/colors/colorbrewer.js","webpack://treemap-example/./node_modules/chroma-js/src/io/cmyk/rgb2cmyk.js","webpack://treemap-example/./node_modules/chroma-js/src/io/cmyk/index.js","webpack://treemap-example/./node_modules/chroma-js/src/io/cmyk/cmyk2rgb.js","webpack://treemap-example/./node_modules/chroma-js/src/io/css/hsl2css.js","webpack://treemap-example/./node_modules/chroma-js/src/io/oklch/rgb2oklch.js","webpack://treemap-example/./node_modules/chroma-js/src/io/css/rgb2css.js","webpack://treemap-example/./node_modules/chroma-js/src/io/css/lab2css.js","webpack://treemap-example/./node_modules/chroma-js/src/io/css/lch2css.js","webpack://treemap-example/./node_modules/chroma-js/src/io/css/oklab2css.js","webpack://treemap-example/./node_modules/chroma-js/src/io/css/oklch2css.js","webpack://treemap-example/./node_modules/chroma-js/src/io/oklch/oklch2rgb.js","webpack://treemap-example/./node_modules/chroma-js/src/io/css/css2rgb.js","webpack://treemap-example/./node_modules/chroma-js/src/io/css/index.js","webpack://treemap-example/./node_modules/chroma-js/src/io/gl/index.js","webpack://treemap-example/./node_modules/chroma-js/src/io/hex/index.js","webpack://treemap-example/./node_modules/chroma-js/src/io/temp/temperature2rgb.js","webpack://treemap-example/./node_modules/chroma-js/src/io/temp/rgb2temperature.js","webpack://treemap-example/./node_modules/chroma-js/src/io/temp/index.js","webpack://treemap-example/./node_modules/chroma-js/src/io/oklch/index.js","webpack://treemap-example/./node_modules/chroma-js/index.js","webpack://treemap-example/./node_modules/chroma-js/src/utils/distance.js","webpack://treemap-example/./node_modules/chroma-js/src/utils/valid.js","webpack://treemap-example/./src/Helpers/CalcColors.js","webpack://treemap-example/./src/entry.js","webpack://treemap-example/./src/Helpers/NormalizeData.js"],"sourcesContent":["class Direction {\n    static leftToRight = new Direction('leftToRight')\n    static upToDown = new Direction('upToDown')\n\n    constructor(name) {\n        this.name = name\n    }\n\n    toString() {\n        return this.name\n    }\n}\n\nexport default Direction;\n","export default class Point {\n    constructor(x=0, y=0) {\n        this.x = x\n        this.y = y\n    }\n\n    calcArea(secondPoint) {\n        if (this.x < secondPoint.x || this.y < secondPoint.y){\n            return secondPoint.calcArea(this);\n        }\n        return (this.x - secondPoint - x) * (this.y - secondPoint.y)\n    }\n}","import Point from \"./Point\";\n\nexport default class CanvaFacade {\n    constructor(canva) {\n        this.canva = canva\n        this.context = this.canva.getContext('2d')\n        this.drawnArea = 0;\n        this.startPoint = new Point()\n        this.endPoint = this.getDimensions()\n    }\n\n    resetCanva() {\n        this.drawnArea = 0;\n        this.startPoint = new Point()\n        this.endPoint = this.getDimensions()\n    }\n\n    setStartPoint(newPoint) {\n        const endPoint = this.getDimensions()\n        this.startPoint = newPoint\n        endPoint.x -= newPoint.x\n        endPoint.y -= newPoint.y\n        this.endPoint = endPoint\n    }\n\n    resetDimensions() {\n        this.startPoint = new Point()\n        this.endPoint = this.getDimensions()\n    }\n\n    getDimensions() {\n        return new Point(this.canva.width, this.canva.height)\n    }\n\n    getArea() {\n        const dimensions = this.getDimensions()\n        return dimensions.x * dimensions.y\n    }\n\n    drawRect(rect){\n        this.context.fillStyle = rect.color;\n        this.context.fillRect(rect.startPoint.x, rect.startPoint.y, rect.endPoint.x, rect.endPoint.y);\n\n        this.context.strokeStyle = \"black\";\n        this.context.strokeRect(rect.startPoint.x, rect.startPoint.y, rect.endPoint.x, rect.endPoint.y);\n\n        if (!!rect.data) this.drawLegend(rect)\n    }\n\n    calcFont(rect) {\n        const data = rect.data\n        const text = data.getTitle()\n\n        let fontSize = 32;\n        this.context.font = `${fontSize}px Arial`;\n\n        let textWidth = this.context.measureText(text).width;\n        const padding = 10;\n\n        while (textWidth > rect.endPoint.x - padding && fontSize > 8) {\n            fontSize--;\n            textWidth = this.context.measureText(text).width;\n        }\n\n        return fontSize\n    }\n\n    drawLegend(rect) {\n        const data = rect.data\n        const fontSize = this.calcFont(rect)\n        const percentage = \"-10%\";\n        this.context.font = fontSize + 'px Arial';\n        this.context.fillStyle = \"black\";\n        this.context.textAlign = \"center\";\n        this.context.textBaseline = \"middle\";\n        this.context.shadowColor = \"white\";\n        this.context.shadowBlur = 4;\n        this.context.shadowOffsetX = 2;\n        this.context.shadowOffsetY = 2;\n\n        const centerX = rect.startPoint.x + rect.endPoint.x / 2;\n        const centerY = rect.startPoint.y + rect.endPoint.y / 2;\n\n        this.context.fillText(data.getTitle(), centerX, centerY);\n\n        // ------------------\n\n        // Configuração da porcentagem\n        const percentageFontSize = Math.max(fontSize * 0.8, 8); // Fonte menor que o texto principal\n        this.context.font = `${percentageFontSize}px Arial`;\n\n        // Definir cor da porcentagem (vermelho para negativo, verde para positivo)\n        this.context.fillStyle = percentage.includes(\"-\") ? \"#480B0B\" : \"#030602\";\n\n        // Espaçamento entre o texto principal e a porcentagem\n        const lineSpacing = percentageFontSize + 2;\n\n        // Desenhar a porcentagem abaixo do texto principal\n        this.context.fillText(data.getPercentageStr(), centerX, centerY + lineSpacing);\n        this.context.shadowColor = \"transparent\";\n        this.context.shadowBlur = 0;\n        this.context.shadowOffsetX = 0;\n        this.context.shadowOffsetY = 0;\n    }\n}","export default class Rect {\n    constructor(startPoint, endPoint, color) {\n        this.startPoint = startPoint\n        this.endPoint = endPoint\n        this.color = color\n    }\n}\n\nexport class DataRect extends Rect {\n    constructor(startPoint, endPoint, color, data) {\n        super(startPoint, endPoint, color)\n        this.data = data\n    }\n}\n","import Point from \"../Graphics/Point\"\n\nexport function calcMiddlePointLeftToRight(area, initialPointer, endPointer) {\n    const x = area / endPointer.y\n    return new Point(x, endPointer.y)\n}\n\nexport function recalcStartPointLeftToRight(area, initialPointer, endPointer) {\n    const x = (area / endPointer.y) + initialPointer.x\n    return new Point(x, initialPointer.y)\n}\n\nexport function calcMiddlePointUpToDown(area, initialPointer, endPointer) {\n    const y = area / endPointer.x\n    return new Point(endPointer.x, y)\n}\n\nexport function recalcStartPointUpToDown(area, initialPointer, endPointer) {\n    const x = initialPointer.x\n    const y = (area / endPointer.x) + initialPointer.y\n    return new Point(x, y)\n}\n","export default class Value {\r\n    constructor(name, symbol, value, percentage = 0, color = '#fff') {\r\n        this.name = name\r\n        this.symbol = symbol\r\n        this.value = value\r\n        this.percentage = percentage\r\n        this.color = color;\r\n    }\r\n\r\n    getTitle() {\r\n        return this.name.substring(0, 15) + ' (' + this.symbol + ')'\r\n    }\r\n\r\n    getPercentageStr() {\r\n        return `${this.percentage.toFixed(3)}%`\r\n    }\r\n\r\n    static buildFromObject(obj) {\r\n        return new Value(\r\n            obj.name,\r\n            obj.symbol,\r\n            obj.value,\r\n            obj.percentage,\r\n            obj.color\r\n        )\r\n    }\r\n}","export default class Node {\n    constructor(data = null) {\n        this._children = []\n        this._data = data\n    }\n\n    getData() {\n        return this._data\n    }\n\n    getChild() {\n        return this._children\n    }\n\n    addChild(child) {\n        this._children.push(child)\n    }\n\n    addChildByData(data) {\n        this.addChild(new Node(data))\n    }\n\n    getLeft() {\n        const filteredChildren = this._children.filter(child => child._data !== null);\n        if (filteredChildren.length > 0) {\n            return filteredChildren;\n        }\n        return null;\n    }\n\n    getRight() {\n        const filteredChildren = this._children.filter(child => child._data === null);\n        if (filteredChildren.length > 0) {\n            return filteredChildren.at(-1);\n        }\n        return null;\n    }\n\n    getLastRoot() {\n        const filteredChildren = this._children.filter(child => child._data === null);\n        if (filteredChildren.length > 0) {\n            return filteredChildren.at(-1).getLastRoot();\n        }\n        return this;\n    }\n\n    sum() {\n        let ans = 0\n        if (!!this._data) {\n            ans += this._data.value\n        }\n        this._children.forEach(child => {\n            ans += child.sum()\n        })\n        return ans\n    }\n}","import Direction from \"../DirectionEnum\"\nimport Value from \"../Model/Value\"\nimport Node from \"./Node\"\n\nexport default class Tree {\n    constructor(root = null, direction = Direction.leftToRight) {\n        this.root = root\n        this.direction = direction\n    }\n\n    static buildFromArray(data, direction = Direction.leftToRight) {\n        let root = new Node()\n        let dataSet = JSON.parse(JSON.stringify(data)).map(el => Value.buildFromObject(el))\n        const dataSum = data.reduce((sum, el) => el.value + sum, 0)\n        let sumLimit = dataSum * 0.5\n\n        while(dataSet.length > 0) {\n            let currentNodeData = []\n            let dataSumLoop = 0;\n            while(true) {\n                if (dataSet.length === 0) break;\n                if ((dataSumLoop + dataSet[0].value) > sumLimit && currentNodeData.length > 0) break;\n                const element = dataSet.shift()\n                currentNodeData.push(element)\n                dataSumLoop += element.value\n            }\n            currentNodeData.forEach(el => root.getLastRoot().addChildByData(el))\n            if (dataSet.length > 0) root.getLastRoot().addChild(new Node())\n            sumLimit = (dataSum - root.sum()) * 0.5\n        }\n\n        return new Tree(root, direction)\n    }\n\n    getDepth(root = this.root, depth = 0) {\n        if (!!root.getData()) return depth;\n        const depths = root.getChild().map(el => this.getDepth(el, depth + 1))\n        \n        return Math.max(...depths)\n    }\n\n    sum() {\n        if (!this._sum) {\n            this._sum = this.root.sum()\n\n        }\n        return this._sum\n    }\n\n    sliceTree() {\n        const nextDirection = this.direction == Direction.leftToRight ? Direction.upToDown : Direction.leftToRight;\n        const leftRootArr = this.root.getLeft()\n        const leftRoot = new Node();\n        leftRoot._children = leftRootArr\n        const rightRoot = this.root.getRight();\n        \n        let left = !!leftRoot ? new Tree(leftRoot, this.direction) : null\n        let right = !!rightRoot ? new Tree(rightRoot, nextDirection) : null\n        \n        return { left, right }\n    }\n\n    calcPercentage(tree) {\n        const percentage = tree.sum() / this.sum()\n        return percentage\n    }\n}","import Direction from \"./DirectionEnum\";\nimport CanvaFacade from \"./Graphics/CanvaFacade\";\nimport Point from \"./Graphics/Point\";\nimport Rect, { DataRect } from \"./Graphics/Rect\";\nimport { calcMiddlePointLeftToRight, calcMiddlePointUpToDown, recalcStartPointLeftToRight, recalcStartPointUpToDown } from \"./Helpers/CalcCoordinateHelper\";\nimport Tree from \"./Tree/Tree\"\n\nexport default class Graph {\n    constructor (canva, data = []) {\n        this.canva = new CanvaFacade(canva)\n        this.tree = Tree.buildFromArray(data)\n        this.canva.drawRect(new Rect(this.canva.startPoint, this.canva.endPoint, '#ccc'))\n    }\n\n    setData(data) {\n        this.tree = Tree.buildFromArray(data)\n    }\n\n    render() {\n        console.log('chamado')\n        let currentTree = this.tree\n        let counter = 0\n        const canvasArea = this.canva.getArea()\n        \n        while(!!currentTree) {\n            const slicedTree = currentTree.sliceTree()\n            const left = slicedTree.left\n            const right = slicedTree.right\n            currentTree = right\n            const startPoint = this.canva.startPoint\n            let middlePoint;\n            let newStartPoint;\n\n            if (left.direction === Direction.leftToRight) {\n                middlePoint = calcMiddlePointLeftToRight(\n                    this.tree.calcPercentage(left) * canvasArea,\n                    startPoint,\n                    this.canva.endPoint\n                )\n                \n                newStartPoint = recalcStartPointLeftToRight(\n                    this.tree.calcPercentage(left) * canvasArea,\n                    startPoint,\n                    this.canva.endPoint\n                )\n            } else {\n                middlePoint = calcMiddlePointUpToDown(\n                    this.tree.calcPercentage(left) * canvasArea,\n                    startPoint,\n                    this.canva.endPoint\n                )\n                \n                newStartPoint = recalcStartPointUpToDown(\n                    this.tree.calcPercentage(left) * canvasArea,\n                    startPoint,\n                    this.canva.endPoint\n                )\n            }\n\n            this.renderTree(left, startPoint, middlePoint)\n            this.canva.setStartPoint(newStartPoint)\n            counter++\n        }\n        this.canva.resetCanva()\n    }\n\n    renderTree(tree, startPoint, endPoint) {\n        if (tree.direction === Direction.leftToRight) {\n            this.renderTreeLeftToRight(tree, startPoint, endPoint)\n        } else {\n            this.renderTreeUpToDown(tree, startPoint, endPoint)\n        }\n    }\n\n    renderTreeLeftToRight(tree, startPoint, endPoint) {\n        const coordinates = this.getDrawCoordinatesToTreeLeftToRight(tree, startPoint, endPoint)\n        coordinates.forEach(rect => this.canva.drawRect(rect));\n    }\n\n    renderTreeUpToDown(tree, startPoint, endPoint) {\n        const coordinates = this.getDrawCoordinatesToTreeUpToDown(tree, startPoint, endPoint)\n        coordinates.forEach(rect => this.canva.drawRect(rect));\n    }\n\n    getDrawCoordinatesToTreeUpToDown(tree, startPoint, endPoint) {\n        const areaCanva = this.canva.getArea()\n        let currentPoint = new Point(startPoint.x, startPoint.y)\n        \n        const drawCoordinates = tree.root.getChild().map(node => {\n            const areaNode = (node.sum() * areaCanva) / this.tree.sum()\n\n            const endPointSquare = calcMiddlePointLeftToRight(\n                areaNode,\n                currentPoint,\n                endPoint\n            )\n            const data = node.getData();\n            const rect = new DataRect(currentPoint, endPointSquare, data.color, data)\n            currentPoint = recalcStartPointLeftToRight(\n                areaNode,\n                currentPoint,\n                endPoint\n            )\n            return rect\n        })\n\n        return drawCoordinates;\n    \n    }\n\n    getDrawCoordinatesToTreeLeftToRight(tree, startPoint, endPoint) {\n        const areaCanva = this.canva.getArea()\n        let currentPoint = new Point(startPoint.x, startPoint.y)\n        \n        const drawCoordinates = tree.root.getChild().map(node => {\n            const areaNode = (node.sum() * areaCanva) / this.tree.sum()\n\n            const endPointSquare = calcMiddlePointUpToDown(\n                areaNode,\n                currentPoint,\n                endPoint\n            )\n            const data = node.getData();\n            const rect = new DataRect(currentPoint, endPointSquare, data.color, data)\n            currentPoint = recalcStartPointUpToDown(\n                areaNode,\n                currentPoint,\n                endPointSquare\n            )\n            return rect\n        })\n\n        return drawCoordinates;\n    \n    }\n}","const { min, max } = Math;\n\nexport default (x, low = 0, high = 1) => {\n    return min(max(low, x), high);\n};\n","import limit from './limit.js';\n\nexport default (rgb) => {\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n    for (let i = 0; i <= 3; i++) {\n        if (i < 3) {\n            if (rgb[i] < 0 || rgb[i] > 255) rgb._clipped = true;\n            rgb[i] = limit(rgb[i], 0, 255);\n        } else if (i === 3) {\n            rgb[i] = limit(rgb[i], 0, 1);\n        }\n    }\n    return rgb;\n};\n","// ported from jQuery's $.type\nconst classToType = {};\nfor (let name of [\n    'Boolean',\n    'Number',\n    'String',\n    'Function',\n    'Array',\n    'Date',\n    'RegExp',\n    'Undefined',\n    'Null'\n]) {\n    classToType[`[object ${name}]`] = name.toLowerCase();\n}\nexport default function (obj) {\n    return classToType[Object.prototype.toString.call(obj)] || 'object';\n}\n","import type from './type.js';\n\nexport default (args, keyOrder = null) => {\n    // if called with more than 3 arguments, we return the arguments\n    if (args.length >= 3) return Array.prototype.slice.call(args);\n    // with less than 3 args we check if first arg is object\n    // and use the keyOrder string to extract and sort properties\n    if (type(args[0]) == 'object' && keyOrder) {\n        return keyOrder\n            .split('')\n            .filter((k) => args[0][k] !== undefined)\n            .map((k) => args[0][k]);\n    }\n    // otherwise we just return the first argument\n    // (which we suppose is an array of args)\n    return args[0].slice(0);\n};\n","import type from './type.js';\n\nexport default (args) => {\n    if (args.length < 2) return null;\n    const l = args.length - 1;\n    if (type(args[l]) == 'string') return args[l].toLowerCase();\n    return null;\n};\n","const { PI, min, max } = Math;\n\nconst rnd2 = (a) => Math.round(a * 100) / 100;\nconst rnd3 = (a) => Math.round(a * 100) / 100;\n\nexport { default as clip_rgb } from './clip_rgb.js';\nexport { default as limit } from './limit.js';\nexport { default as type } from './type.js';\nexport { default as unpack } from './unpack.js';\nexport { default as last } from './last.js';\n\nconst TWOPI = PI * 2;\nconst PITHIRD = PI / 3;\nconst DEG2RAD = PI / 180;\nconst RAD2DEG = 180 / PI;\n\n/**\n * Reverse the first three elements of an array\n *\n * @param {any[]} arr\n * @returns {any[]}\n */\nfunction reverse3(arr) {\n    return [...arr.slice(0, 3).reverse(), ...arr.slice(3)];\n}\n\nexport { PI, TWOPI, PITHIRD, DEG2RAD, RAD2DEG, min, max, rnd2, rnd3, reverse3 };\n","export default {\n    format: {},\n    autodetect: []\n};\n","import { last, clip_rgb, type } from './utils/index.js';\nimport _input from './io/input.js';\n\nclass Color {\n    constructor(...args) {\n        const me = this;\n        if (\n            type(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor\n        ) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n        // last argument could be the mode\n        let mode = last(args);\n        let autodetect = false;\n        if (!mode) {\n            autodetect = true;\n\n            if (!_input.sorted) {\n                _input.autodetect = _input.autodetect.sort((a, b) => b.p - a.p);\n                _input.sorted = true;\n            }\n\n            // auto-detect format\n            for (let chk of _input.autodetect) {\n                mode = chk.test(...args);\n                if (mode) break;\n            }\n        }\n        if (_input.format[mode]) {\n            const rgb = _input.format[mode].apply(\n                null,\n                autodetect ? args : args.slice(0, -1)\n            );\n            me._rgb = clip_rgb(rgb);\n        } else {\n            throw new Error('unknown format: ' + args);\n        }\n        // add alpha channel\n        if (me._rgb.length === 3) me._rgb.push(1);\n    }\n    toString() {\n        if (type(this.hex) == 'function') return this.hex();\n        return `[${this._rgb.join(',')}]`;\n    }\n}\nexport default Color;\n","import Color from './Color.js';\nimport { version } from './version.js';\n\nconst chroma = (...args) => {\n    return new Color(...args);\n};\n\nchroma.version = version;\n\nexport default chroma;\n","// this gets updated automatically\nexport const version = '3.1.2';\n","/**\n\tX11 color names\n\n\thttp://www.w3.org/TR/css3-color/#svg-color\n*/\n\nconst w3cx11 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n};\n\nexport default w3cx11;\n","const RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\nconst RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\nconst hex2rgb = (hex) => {\n    if (hex.match(RE_HEX)) {\n        // remove optional leading #\n        if (hex.length === 4 || hex.length === 7) {\n            hex = hex.substr(1);\n        }\n        // expand short-notation to full six-digit\n        if (hex.length === 3) {\n            hex = hex.split('');\n            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n        }\n        const u = parseInt(hex, 16);\n        const r = u >> 16;\n        const g = (u >> 8) & 0xff;\n        const b = u & 0xff;\n        return [r, g, b, 1];\n    }\n\n    // match rgba hex format, eg #FF000077\n    if (hex.match(RE_HEXA)) {\n        if (hex.length === 5 || hex.length === 9) {\n            // remove optional leading #\n            hex = hex.substr(1);\n        }\n        // expand short-notation to full eight-digit\n        if (hex.length === 4) {\n            hex = hex.split('');\n            hex =\n                hex[0] +\n                hex[0] +\n                hex[1] +\n                hex[1] +\n                hex[2] +\n                hex[2] +\n                hex[3] +\n                hex[3];\n        }\n        const u = parseInt(hex, 16);\n        const r = (u >> 24) & 0xff;\n        const g = (u >> 16) & 0xff;\n        const b = (u >> 8) & 0xff;\n        const a = Math.round(((u & 0xff) / 0xff) * 100) / 100;\n        return [r, g, b, a];\n    }\n\n    // we used to check for css colors here\n    // if _input.css? and rgb = _input.css hex\n    //     return rgb\n\n    throw new Error(`unknown hex color: ${hex}`);\n};\n\nexport default hex2rgb;\n","import { unpack, last } from '../../utils/index.js';\nconst { round } = Math;\n\nconst rgb2hex = (...args) => {\n    let [r, g, b, a] = unpack(args, 'rgba');\n    let mode = last(args) || 'auto';\n    if (a === undefined) a = 1;\n    if (mode === 'auto') {\n        mode = a < 1 ? 'rgba' : 'rgb';\n    }\n    r = round(r);\n    g = round(g);\n    b = round(b);\n    const u = (r << 16) | (g << 8) | b;\n    let str = '000000' + u.toString(16); //#.toUpperCase();\n    str = str.substr(str.length - 6);\n    let hxa = '0' + round(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n    switch (mode.toLowerCase()) {\n        case 'rgba':\n            return `#${str}${hxa}`;\n        case 'argb':\n            return `#${hxa}${str}`;\n        default:\n            return `#${str}`;\n    }\n};\n\nexport default rgb2hex;\n","import Color from '../../Color.js';\nimport input from '../input.js';\nimport { type } from '../../utils/index.js';\n\nimport w3cx11 from '../../colors/w3cx11.js';\nimport hex2rgb from '../hex/hex2rgb.js';\nimport rgb2hex from '../hex/rgb2hex.js';\n\nColor.prototype.name = function () {\n    const hex = rgb2hex(this._rgb, 'rgb');\n    for (let n of Object.keys(w3cx11)) {\n        if (w3cx11[n] === hex) return n.toLowerCase();\n    }\n    return hex;\n};\n\ninput.format.named = (name) => {\n    name = name.toLowerCase();\n    if (w3cx11[name]) return hex2rgb(w3cx11[name]);\n    throw new Error('unknown color name: ' + name);\n};\n\ninput.autodetect.push({\n    p: 5,\n    test: (h, ...rest) => {\n        if (!rest.length && type(h) === 'string' && w3cx11[h.toLowerCase()]) {\n            return 'named';\n        }\n    }\n});\n","import Color from '../Color.js';\nimport { type } from '../utils/index.js';\n\nColor.prototype.alpha = function (a, mutate = false) {\n    if (a !== undefined && type(a) === 'number') {\n        if (mutate) {\n            this._rgb[3] = a;\n            return this;\n        }\n        return new Color([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n    }\n    return this._rgb[3];\n};\n","import Color from '../Color.js';\n\nColor.prototype.clipped = function () {\n    return this._rgb._clipped || false;\n};\n","const labConstants = {\n    // Corresponds roughly to RGB brighter/darker\n    Kn: 18,\n\n    // D65 standard referent\n    labWhitePoint: 'd65',\n    Xn: 0.95047,\n    Yn: 1,\n    Zn: 1.08883,\n\n    t0: 0.137931034, // 4 / 29\n    t1: 0.206896552, // 6 / 29\n    t2: 0.12841855, // 3 * t1 * t1\n    t3: 0.008856452, // t1 * t1 * t1,\n\n    kE: 216.0 / 24389.0,\n    kKE: 8.0,\n    kK: 24389.0 / 27.0,\n\n    RefWhiteRGB: {\n        // sRGB\n        X: 0.95047,\n        Y: 1,\n        Z: 1.08883\n    },\n\n    MtxRGB2XYZ: {\n        m00: 0.4124564390896922,\n        m01: 0.21267285140562253,\n        m02: 0.0193338955823293,\n        m10: 0.357576077643909,\n        m11: 0.715152155287818,\n        m12: 0.11919202588130297,\n        m20: 0.18043748326639894,\n        m21: 0.07217499330655958,\n        m22: 0.9503040785363679\n    },\n\n    MtxXYZ2RGB: {\n        m00: 3.2404541621141045,\n        m01: -0.9692660305051868,\n        m02: 0.055643430959114726,\n        m10: -1.5371385127977166,\n        m11: 1.8760108454466942,\n        m12: -0.2040259135167538,\n        m20: -0.498531409556016,\n        m21: 0.041556017530349834,\n        m22: 1.0572251882231791\n    },\n\n    // used in rgb2xyz\n    As: 0.9414285350000001,\n    Bs: 1.040417467,\n    Cs: 1.089532651,\n\n    MtxAdaptMa: {\n        m00: 0.8951,\n        m01: -0.7502,\n        m02: 0.0389,\n        m10: 0.2664,\n        m11: 1.7135,\n        m12: -0.0685,\n        m20: -0.1614,\n        m21: 0.0367,\n        m22: 1.0296\n    },\n\n    MtxAdaptMaI: {\n        m00: 0.9869929054667123,\n        m01: 0.43230526972339456,\n        m02: -0.008528664575177328,\n        m10: -0.14705425642099013,\n        m11: 0.5183602715367776,\n        m12: 0.04004282165408487,\n        m20: 0.15996265166373125,\n        m21: 0.0492912282128556,\n        m22: 0.9684866957875502\n    }\n};\n\nexport default labConstants;\n\n// taken from https://de.mathworks.com/help/images/ref/whitepoint.html\nconst ILLUMINANTS = new Map([\n    // ASTM E308-01\n    ['a', [1.0985, 0.35585]],\n    // Wyszecki & Stiles, p. 769\n    ['b', [1.0985, 0.35585]],\n    // C ASTM E308-01\n    ['c', [0.98074, 1.18232]],\n    // D50 (ASTM E308-01)\n    ['d50', [0.96422, 0.82521]],\n    // D55 (ASTM E308-01)\n    ['d55', [0.95682, 0.92149]],\n    // D65 (ASTM E308-01)\n    ['d65', [0.95047, 1.08883]],\n    // E (ASTM E308-01)\n    ['e', [1, 1, 1]],\n    // F2 (ASTM E308-01)\n    ['f2', [0.99186, 0.67393]],\n    // F7 (ASTM E308-01)\n    ['f7', [0.95041, 1.08747]],\n    // F11 (ASTM E308-01)\n    ['f11', [1.00962, 0.6435]],\n    ['icc', [0.96422, 0.82521]]\n]);\n\nexport function setLabWhitePoint(name) {\n    const ill = ILLUMINANTS.get(String(name).toLowerCase());\n    if (!ill) {\n        throw new Error('unknown Lab illuminant ' + name);\n    }\n    labConstants.labWhitePoint = name;\n    labConstants.Xn = ill[0];\n    labConstants.Zn = ill[1];\n}\n\nexport function getLabWhitePoint() {\n    return labConstants.labWhitePoint;\n}\n","import LAB_CONSTANTS from './lab-constants.js';\nimport { unpack } from '../../utils/index.js';\n\n/*\n * L* [0..100]\n * a [-100..100]\n * b [-100..100]\n */\nconst lab2rgb = (...args) => {\n    args = unpack(args, 'lab');\n    const [L, a, b] = args;\n    const [x, y, z] = lab2xyz(L, a, b);\n    const [r, g, b_] = xyz2rgb(x, y, z);\n    return [r, g, b_, args.length > 3 ? args[3] : 1];\n};\n\nconst lab2xyz = (L, a, b) => {\n    const { kE, kK, kKE, Xn, Yn, Zn } = LAB_CONSTANTS;\n\n    const fy = (L + 16.0) / 116.0;\n    const fx = 0.002 * a + fy;\n    const fz = fy - 0.005 * b;\n\n    const fx3 = fx * fx * fx;\n    const fz3 = fz * fz * fz;\n\n    const xr = fx3 > kE ? fx3 : (116.0 * fx - 16.0) / kK;\n    const yr = L > kKE ? Math.pow((L + 16.0) / 116.0, 3.0) : L / kK;\n    const zr = fz3 > kE ? fz3 : (116.0 * fz - 16.0) / kK;\n\n    const x = xr * Xn;\n    const y = yr * Yn;\n    const z = zr * Zn;\n\n    return [x, y, z];\n};\n\nconst compand = (linear) => {\n    /* sRGB */\n    const sign = Math.sign(linear);\n    linear = Math.abs(linear);\n    return (\n        (linear <= 0.0031308\n            ? linear * 12.92\n            : 1.055 * Math.pow(linear, 1.0 / 2.4) - 0.055) * sign\n    );\n};\n\nconst xyz2rgb = (x, y, z) => {\n    const { MtxAdaptMa, MtxAdaptMaI, MtxXYZ2RGB, RefWhiteRGB, Xn, Yn, Zn } =\n        LAB_CONSTANTS;\n\n    const As = Xn * MtxAdaptMa.m00 + Yn * MtxAdaptMa.m10 + Zn * MtxAdaptMa.m20;\n    const Bs = Xn * MtxAdaptMa.m01 + Yn * MtxAdaptMa.m11 + Zn * MtxAdaptMa.m21;\n    const Cs = Xn * MtxAdaptMa.m02 + Yn * MtxAdaptMa.m12 + Zn * MtxAdaptMa.m22;\n\n    const Ad =\n        RefWhiteRGB.X * MtxAdaptMa.m00 +\n        RefWhiteRGB.Y * MtxAdaptMa.m10 +\n        RefWhiteRGB.Z * MtxAdaptMa.m20;\n    const Bd =\n        RefWhiteRGB.X * MtxAdaptMa.m01 +\n        RefWhiteRGB.Y * MtxAdaptMa.m11 +\n        RefWhiteRGB.Z * MtxAdaptMa.m21;\n    const Cd =\n        RefWhiteRGB.X * MtxAdaptMa.m02 +\n        RefWhiteRGB.Y * MtxAdaptMa.m12 +\n        RefWhiteRGB.Z * MtxAdaptMa.m22;\n\n    const X1 =\n        (x * MtxAdaptMa.m00 + y * MtxAdaptMa.m10 + z * MtxAdaptMa.m20) *\n        (Ad / As);\n    const Y1 =\n        (x * MtxAdaptMa.m01 + y * MtxAdaptMa.m11 + z * MtxAdaptMa.m21) *\n        (Bd / Bs);\n    const Z1 =\n        (x * MtxAdaptMa.m02 + y * MtxAdaptMa.m12 + z * MtxAdaptMa.m22) *\n        (Cd / Cs);\n\n    const X2 =\n        X1 * MtxAdaptMaI.m00 + Y1 * MtxAdaptMaI.m10 + Z1 * MtxAdaptMaI.m20;\n    const Y2 =\n        X1 * MtxAdaptMaI.m01 + Y1 * MtxAdaptMaI.m11 + Z1 * MtxAdaptMaI.m21;\n    const Z2 =\n        X1 * MtxAdaptMaI.m02 + Y1 * MtxAdaptMaI.m12 + Z1 * MtxAdaptMaI.m22;\n\n    const r = compand(\n        X2 * MtxXYZ2RGB.m00 + Y2 * MtxXYZ2RGB.m10 + Z2 * MtxXYZ2RGB.m20\n    );\n    const g = compand(\n        X2 * MtxXYZ2RGB.m01 + Y2 * MtxXYZ2RGB.m11 + Z2 * MtxXYZ2RGB.m21\n    );\n    const b = compand(\n        X2 * MtxXYZ2RGB.m02 + Y2 * MtxXYZ2RGB.m12 + Z2 * MtxXYZ2RGB.m22\n    );\n\n    return [r * 255, g * 255, b * 255];\n};\n\nexport default lab2rgb;\nexport { xyz2rgb };\n","import LAB_CONSTANTS from './lab-constants.js';\nimport { unpack } from '../../utils/index.js';\n\nconst rgb2lab = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [x, y, z] = rgb2xyz(r, g, b);\n    const [L, a, b_] = xyz2lab(x, y, z);\n    return [L, a, b_, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nfunction xyz2lab(x, y, z) {\n    const { Xn, Yn, Zn, kE, kK } = LAB_CONSTANTS;\n    const xr = x / Xn;\n    const yr = y / Yn;\n    const zr = z / Zn;\n\n    const fx = xr > kE ? Math.pow(xr, 1.0 / 3.0) : (kK * xr + 16.0) / 116.0;\n    const fy = yr > kE ? Math.pow(yr, 1.0 / 3.0) : (kK * yr + 16.0) / 116.0;\n    const fz = zr > kE ? Math.pow(zr, 1.0 / 3.0) : (kK * zr + 16.0) / 116.0;\n\n    return [116.0 * fy - 16.0, 500.0 * (fx - fy), 200.0 * (fy - fz)];\n}\n\nfunction gammaAdjustSRGB(companded) {\n    const sign = Math.sign(companded);\n    companded = Math.abs(companded);\n    const linear =\n        companded <= 0.04045\n            ? companded / 12.92\n            : Math.pow((companded + 0.055) / 1.055, 2.4);\n    return linear * sign;\n}\n\nconst rgb2xyz = (r, g, b) => {\n    // normalize and gamma adjust\n    r = gammaAdjustSRGB(r / 255);\n    g = gammaAdjustSRGB(g / 255);\n    b = gammaAdjustSRGB(b / 255);\n\n    const { MtxRGB2XYZ, MtxAdaptMa, MtxAdaptMaI, Xn, Yn, Zn, As, Bs, Cs } =\n        LAB_CONSTANTS;\n\n    let x = r * MtxRGB2XYZ.m00 + g * MtxRGB2XYZ.m10 + b * MtxRGB2XYZ.m20;\n    let y = r * MtxRGB2XYZ.m01 + g * MtxRGB2XYZ.m11 + b * MtxRGB2XYZ.m21;\n    let z = r * MtxRGB2XYZ.m02 + g * MtxRGB2XYZ.m12 + b * MtxRGB2XYZ.m22;\n\n    const Ad = Xn * MtxAdaptMa.m00 + Yn * MtxAdaptMa.m10 + Zn * MtxAdaptMa.m20;\n    const Bd = Xn * MtxAdaptMa.m01 + Yn * MtxAdaptMa.m11 + Zn * MtxAdaptMa.m21;\n    const Cd = Xn * MtxAdaptMa.m02 + Yn * MtxAdaptMa.m12 + Zn * MtxAdaptMa.m22;\n\n    let X = x * MtxAdaptMa.m00 + y * MtxAdaptMa.m10 + z * MtxAdaptMa.m20;\n    let Y = x * MtxAdaptMa.m01 + y * MtxAdaptMa.m11 + z * MtxAdaptMa.m21;\n    let Z = x * MtxAdaptMa.m02 + y * MtxAdaptMa.m12 + z * MtxAdaptMa.m22;\n\n    X *= Ad / As;\n    Y *= Bd / Bs;\n    Z *= Cd / Cs;\n\n    x = X * MtxAdaptMaI.m00 + Y * MtxAdaptMaI.m10 + Z * MtxAdaptMaI.m20;\n    y = X * MtxAdaptMaI.m01 + Y * MtxAdaptMaI.m11 + Z * MtxAdaptMaI.m21;\n    z = X * MtxAdaptMaI.m02 + Y * MtxAdaptMaI.m12 + Z * MtxAdaptMaI.m22;\n\n    return [x, y, z];\n};\n\nexport default rgb2lab;\nexport { rgb2xyz };\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport lab2rgb from './lab2rgb.js';\nimport rgb2lab from './rgb2lab.js';\nimport { getLabWhitePoint, setLabWhitePoint } from './lab-constants.js';\n\nColor.prototype.lab = function () {\n    return rgb2lab(this._rgb);\n};\n\nconst lab = (...args) => new Color(...args, 'lab');\nObject.assign(chroma, { lab, getLabWhitePoint, setLabWhitePoint });\n\ninput.format.lab = lab2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'lab');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'lab';\n        }\n    }\n});\n\nexport { lab, getLabWhitePoint, setLabWhitePoint };\n","import '../io/lab/index.js';\nimport Color from '../Color.js';\nimport LAB_CONSTANTS from '../io/lab/lab-constants.js';\n\nColor.prototype.darken = function (amount = 1) {\n    const me = this;\n    const lab = me.lab();\n    lab[0] -= LAB_CONSTANTS.Kn * amount;\n    return new Color(lab, 'lab').alpha(me.alpha(), true);\n};\n\nColor.prototype.brighten = function (amount = 1) {\n    return this.darken(-amount);\n};\n\nColor.prototype.darker = Color.prototype.darken;\nColor.prototype.brighter = Color.prototype.brighten;\n","import Color from '../Color.js';\n\nColor.prototype.get = function (mc) {\n    const [mode, channel] = mc.split('.');\n    const src = this[mode]();\n    if (channel) {\n        const i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n        if (i > -1) return src[i];\n        throw new Error(`unknown channel ${channel} in mode ${mode}`);\n    } else {\n        return src;\n    }\n};\n","import Color from '../Color.js';\nimport { type } from '../utils/index.js';\nconst { pow } = Math;\n\nconst EPS = 1e-7;\nconst MAX_ITER = 20;\n\nColor.prototype.luminance = function (lum, mode = 'rgb') {\n    if (lum !== undefined && type(lum) === 'number') {\n        if (lum === 0) {\n            // return pure black\n            return new Color([0, 0, 0, this._rgb[3]], 'rgb');\n        }\n        if (lum === 1) {\n            // return pure white\n            return new Color([255, 255, 255, this._rgb[3]], 'rgb');\n        }\n        // compute new color using...\n        let cur_lum = this.luminance();\n        let max_iter = MAX_ITER;\n\n        const test = (low, high) => {\n            const mid = low.interpolate(high, 0.5, mode);\n            const lm = mid.luminance();\n            if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                // close enough\n                return mid;\n            }\n            return lm > lum ? test(low, mid) : test(mid, high);\n        };\n\n        const rgb = (\n            cur_lum > lum\n                ? test(new Color([0, 0, 0]), this)\n                : test(this, new Color([255, 255, 255]))\n        ).rgb();\n        return new Color([...rgb, this._rgb[3]]);\n    }\n    return rgb2luminance(...this._rgb.slice(0, 3));\n};\n\nconst rgb2luminance = (r, g, b) => {\n    // relative luminance\n    // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n};\n\nconst luminance_x = (x) => {\n    x /= 255;\n    return x <= 0.03928 ? x / 12.92 : pow((x + 0.055) / 1.055, 2.4);\n};\n","export default {};\n","import Color from '../Color.js';\nimport { type } from '../utils/index.js';\nimport interpolator from '../interpolator/index.js';\n\nexport default (col1, col2, f = 0.5, ...rest) => {\n    let mode = rest[0] || 'lrgb';\n    if (!interpolator[mode] && !rest.length) {\n        // fall back to the first supported mode\n        mode = Object.keys(interpolator)[0];\n    }\n    if (!interpolator[mode]) {\n        throw new Error(`interpolation mode ${mode} is not defined`);\n    }\n    if (type(col1) !== 'object') col1 = new Color(col1);\n    if (type(col2) !== 'object') col2 = new Color(col2);\n    return interpolator[mode](col1, col2, f).alpha(\n        col1.alpha() + f * (col2.alpha() - col1.alpha())\n    );\n};\n","import Color from '../Color.js';\nimport mix from '../generator/mix.js';\n\nColor.prototype.mix = Color.prototype.interpolate = function (\n    col2,\n    f = 0.5,\n    ...rest\n) {\n    return mix(this, col2, f, ...rest);\n};\n","import Color from '../Color.js';\n\nColor.prototype.premultiply = function (mutate = false) {\n    const rgb = this._rgb;\n    const a = rgb[3];\n    if (mutate) {\n        this._rgb = [rgb[0] * a, rgb[1] * a, rgb[2] * a, a];\n        return this;\n    } else {\n        return new Color([rgb[0] * a, rgb[1] * a, rgb[2] * a, a], 'rgb');\n    }\n};\n","import { unpack, DEG2RAD } from '../../utils/index.js';\nconst { sin, cos } = Math;\n\nconst lch2lab = (...args) => {\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n\n    A saturation multiplier was added by Gregor Aisch\n    */\n    let [l, c, h] = unpack(args, 'lch');\n    if (isNaN(h)) h = 0;\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n};\n\nexport default lch2lab;\n","import { unpack } from '../../utils/index.js';\nimport lch2lab from './lch2lab.js';\nimport lab2rgb from '../lab/lab2rgb.js';\n\nconst lch2rgb = (...args) => {\n    args = unpack(args, 'lch');\n    const [l, c, h] = args;\n    const [L, a, b_] = lch2lab(l, c, h);\n    const [r, g, b] = lab2rgb(L, a, b_);\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n};\n\nexport default lch2rgb;\n","import { unpack, RAD2DEG } from '../../utils/index.js';\nconst { sqrt, atan2, round } = Math;\n\nconst lab2lch = (...args) => {\n    const [l, a, b] = unpack(args, 'lab');\n    const c = sqrt(a * a + b * b);\n    let h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round(c * 10000) === 0) h = Number.NaN;\n    return [l, c, h];\n};\n\nexport default lab2lch;\n","import { unpack } from '../../utils/index.js';\nimport rgb2lab from '../lab/rgb2lab.js';\nimport lab2lch from './lab2lch.js';\n\nconst rgb2lch = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [l, a, b_] = rgb2lab(r, g, b);\n    const [L, c, h] = lab2lch(l, a, b_);\n    return [L, c, h, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nexport default rgb2lch;\n","import { unpack, type, reverse3 } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport lch2rgb from './lch2rgb.js';\nimport hcl2rgb from './hcl2rgb.js';\nimport rgb2lch from './rgb2lch.js';\n\nColor.prototype.lch = function () {\n    return rgb2lch(this._rgb);\n};\nColor.prototype.hcl = function () {\n    return reverse3(rgb2lch(this._rgb));\n};\n\nconst lch = (...args) => new Color(...args, 'lch');\nconst hcl = (...args) => new Color(...args, 'hcl');\n\nObject.assign(chroma, { lch, hcl });\n\ninput.format.lch = lch2rgb;\ninput.format.hcl = hcl2rgb;\n['lch', 'hcl'].forEach((m) =>\n    input.autodetect.push({\n        p: 2,\n        test: (...args) => {\n            args = unpack(args, m);\n            if (type(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    })\n);\n\nexport { lch, hcl };\n","import { unpack, reverse3 } from '../../utils/index.js';\nimport lch2rgb from './lch2rgb.js';\n\nconst hcl2rgb = (...args) => {\n    const hcl = reverse3(unpack(args, 'hcl'));\n    return lch2rgb(...hcl);\n};\n\nexport default hcl2rgb;\n","import '../io/lch/index.js';\nimport Color from '../Color.js';\nimport LAB_CONSTANTS from '../io/lab/lab-constants.js';\n\nColor.prototype.saturate = function (amount = 1) {\n    const me = this;\n    const lch = me.lch();\n    lch[1] += LAB_CONSTANTS.Kn * amount;\n    if (lch[1] < 0) lch[1] = 0;\n    return new Color(lch, 'lch').alpha(me.alpha(), true);\n};\n\nColor.prototype.desaturate = function (amount = 1) {\n    return this.saturate(-amount);\n};\n","import Color from '../Color.js';\nimport { type } from '../utils/index.js';\n\nColor.prototype.set = function (mc, value, mutate = false) {\n    const [mode, channel] = mc.split('.');\n    const src = this[mode]();\n    if (channel) {\n        const i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n        if (i > -1) {\n            if (type(value) == 'string') {\n                switch (value.charAt(0)) {\n                    case '+':\n                        src[i] += +value;\n                        break;\n                    case '-':\n                        src[i] += +value;\n                        break;\n                    case '*':\n                        src[i] *= +value.substr(1);\n                        break;\n                    case '/':\n                        src[i] /= +value.substr(1);\n                        break;\n                    default:\n                        src[i] = +value;\n                }\n            } else if (type(value) === 'number') {\n                src[i] = value;\n            } else {\n                throw new Error(`unsupported value for Color.set`);\n            }\n            const out = new Color(src, mode);\n            if (mutate) {\n                this._rgb = out._rgb;\n                return this;\n            }\n            return out;\n        }\n        throw new Error(`unknown channel ${channel} in mode ${mode}`);\n    } else {\n        return src;\n    }\n};\n","import '../io/lab/index.js';\nimport Color from '../Color.js';\nimport mix from '../generator/mix.js';\n\nColor.prototype.tint = function (f = 0.5, ...rest) {\n    return mix(this, 'white', f, ...rest);\n};\n\nColor.prototype.shade = function (f = 0.5, ...rest) {\n    return mix(this, 'black', f, ...rest);\n};\n","import Color from '../Color.js';\nimport index from './index.js';\n\nconst rgb = (col1, col2, f) => {\n    const xyz0 = col1._rgb;\n    const xyz1 = col2._rgb;\n    return new Color(\n        xyz0[0] + f * (xyz1[0] - xyz0[0]),\n        xyz0[1] + f * (xyz1[1] - xyz0[1]),\n        xyz0[2] + f * (xyz1[2] - xyz0[2]),\n        'rgb'\n    );\n};\n\n// register interpolator\nindex.rgb = rgb;\n\nexport default rgb;\n","import Color from '../Color.js';\nconst { sqrt, pow } = Math;\nimport index from './index.js';\n\nconst lrgb = (col1, col2, f) => {\n    const [x1, y1, z1] = col1._rgb;\n    const [x2, y2, z2] = col2._rgb;\n    return new Color(\n        sqrt(pow(x1, 2) * (1 - f) + pow(x2, 2) * f),\n        sqrt(pow(y1, 2) * (1 - f) + pow(y2, 2) * f),\n        sqrt(pow(z1, 2) * (1 - f) + pow(z2, 2) * f),\n        'rgb'\n    );\n};\n\n// register interpolator\nindex.lrgb = lrgb;\n\nexport default lrgb;\n","import '../io/lab/index.js';\nimport index from './index.js';\nimport Color from '../Color.js';\n\nconst lab = (col1, col2, f) => {\n    const xyz0 = col1.lab();\n    const xyz1 = col2.lab();\n    return new Color(\n        xyz0[0] + f * (xyz1[0] - xyz0[0]),\n        xyz0[1] + f * (xyz1[1] - xyz0[1]),\n        xyz0[2] + f * (xyz1[2] - xyz0[2]),\n        'lab'\n    );\n};\n\n// register interpolator\nindex.lab = lab;\n\nexport default lab;\n","import Color from '../Color.js';\n\nexport default (col1, col2, f, m) => {\n    let xyz0, xyz1;\n    if (m === 'hsl') {\n        xyz0 = col1.hsl();\n        xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n        xyz0 = col1.hsv();\n        xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n        xyz0 = col1.hcg();\n        xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n        xyz0 = col1.hsi();\n        xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n        m = 'hcl';\n        xyz0 = col1.hcl();\n        xyz1 = col2.hcl();\n    } else if (m === 'oklch') {\n        xyz0 = col1.oklch().reverse();\n        xyz1 = col2.oklch().reverse();\n    }\n\n    let hue0, hue1, sat0, sat1, lbv0, lbv1;\n    if (m.substr(0, 1) === 'h' || m === 'oklch') {\n        [hue0, sat0, lbv0] = xyz0;\n        [hue1, sat1, lbv1] = xyz1;\n    }\n\n    let sat, hue, lbv, dh;\n\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n        // both colors have hue\n        if (hue1 > hue0 && hue1 - hue0 > 180) {\n            dh = hue1 - (hue0 + 360);\n        } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n            dh = hue1 + 360 - hue0;\n        } else {\n            dh = hue1 - hue0;\n        }\n        hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n        hue = hue0;\n        if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') sat = sat0;\n    } else if (!isNaN(hue1)) {\n        hue = hue1;\n        if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') sat = sat1;\n    } else {\n        hue = Number.NaN;\n    }\n\n    if (sat === undefined) sat = sat0 + f * (sat1 - sat0);\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return m === 'oklch'\n        ? new Color([lbv, sat, hue], m)\n        : new Color([hue, sat, lbv], m);\n};\n","import '../io/lch/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst lch = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'lch');\n};\n\n// register interpolator\nindex.lch = lch;\nindex.hcl = lch;\n\nexport default lch;\n","import chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport { type } from '../../utils/index.js';\nimport num2rgb from './num2rgb.js';\nimport rgb2num from './rgb2num.js';\n\nColor.prototype.num = function () {\n    return rgb2num(this._rgb);\n};\n\nconst num = (...args) => new Color(...args, 'num');\n\nObject.assign(chroma, { num });\n\ninput.format.num = num2rgb;\n\ninput.autodetect.push({\n    p: 5,\n    test: (...args) => {\n        if (\n            args.length === 1 &&\n            type(args[0]) === 'number' &&\n            args[0] >= 0 &&\n            args[0] <= 0xffffff\n        ) {\n            return 'num';\n        }\n    }\n});\n\nexport { num };\n","import { unpack } from '../../utils/index.js';\n\nconst rgb2num = (...args) => {\n    const [r, g, b] = unpack(args, 'rgb');\n    return (r << 16) + (g << 8) + b;\n};\n\nexport default rgb2num;\n","import { type } from '../../utils/index.js';\n\nconst num2rgb = (num) => {\n    if (type(num) == 'number' && num >= 0 && num <= 0xffffff) {\n        const r = num >> 16;\n        const g = (num >> 8) & 0xff;\n        const b = num & 0xff;\n        return [r, g, b, 1];\n    }\n    throw new Error('unknown num color: ' + num);\n};\n\nexport default num2rgb;\n","import '../io/num/index.js';\nimport index from './index.js';\n\nimport Color from '../Color.js';\n\nconst num = (col1, col2, f) => {\n    const c1 = col1.num();\n    const c2 = col2.num();\n    return new Color(c1 + f * (c2 - c1), 'num');\n};\n\n// register interpolator\nindex.num = num;\n\nexport default num;\n","import { unpack } from '../../utils/index.js';\nconst { floor } = Math;\n\n/*\n * this is basically just HSV with some minor tweaks\n *\n * hue.. [0..360]\n * chroma .. [0..1]\n * grayness .. [0..1]\n */\n\nconst hcg2rgb = (...args) => {\n    args = unpack(args, 'hcg');\n    let [h, c, _g] = args;\n    let r, g, b;\n    _g = _g * 255;\n    const _c = c * 255;\n    if (c === 0) {\n        r = g = b = _g;\n    } else {\n        if (h === 360) h = 0;\n        if (h > 360) h -= 360;\n        if (h < 0) h += 360;\n        h /= 60;\n        const i = floor(h);\n        const f = h - i;\n        const p = _g * (1 - c);\n        const q = p + _c * (1 - f);\n        const t = p + _c * f;\n        const v = p + _c;\n        switch (i) {\n            case 0:\n                [r, g, b] = [v, t, p];\n                break;\n            case 1:\n                [r, g, b] = [q, v, p];\n                break;\n            case 2:\n                [r, g, b] = [p, v, t];\n                break;\n            case 3:\n                [r, g, b] = [p, q, v];\n                break;\n            case 4:\n                [r, g, b] = [t, p, v];\n                break;\n            case 5:\n                [r, g, b] = [v, p, q];\n                break;\n        }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n};\n\nexport default hcg2rgb;\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport hcg2rgb from './hcg2rgb.js';\nimport rgb2hcg from './rgb2hcg.js';\n\nColor.prototype.hcg = function () {\n    return rgb2hcg(this._rgb);\n};\n\nconst hcg = (...args) => new Color(...args, 'hcg');\nchroma.hcg = hcg;\n\ninput.format.hcg = hcg2rgb;\n\ninput.autodetect.push({\n    p: 1,\n    test: (...args) => {\n        args = unpack(args, 'hcg');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'hcg';\n        }\n    }\n});\n\nexport { hcg };\n","import { unpack, max, min } from '../../utils/index.js';\n\nconst rgb2hcg = (...args) => {\n    const [r, g, b] = unpack(args, 'rgb');\n    const minRgb = min(r, g, b);\n    const maxRgb = max(r, g, b);\n    const delta = maxRgb - minRgb;\n    const c = (delta * 100) / 255;\n    const _g = (minRgb / (255 - delta)) * 100;\n    let h;\n    if (delta === 0) {\n        h = Number.NaN;\n    } else {\n        if (r === maxRgb) h = (g - b) / delta;\n        if (g === maxRgb) h = 2 + (b - r) / delta;\n        if (b === maxRgb) h = 4 + (r - g) / delta;\n        h *= 60;\n        if (h < 0) h += 360;\n    }\n    return [h, c, _g];\n};\n\nexport default rgb2hcg;\n","import '../io/hcg/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst hcg = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'hcg');\n};\n\n// register interpolator\nindex.hcg = hcg;\n\nexport default hcg;\n","import { unpack, limit, TWOPI, PITHIRD } from '../../utils/index.js';\nconst { cos } = Math;\n\n/*\n * hue [0..360]\n * saturation [0..1]\n * intensity [0..1]\n */\nconst hsi2rgb = (...args) => {\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n    */\n    args = unpack(args, 'hsi');\n    let [h, s, i] = args;\n    let r, g, b;\n\n    if (isNaN(h)) h = 0;\n    if (isNaN(s)) s = 0;\n    // normalize hue\n    if (h > 360) h -= 360;\n    if (h < 0) h += 360;\n    h /= 360;\n    if (h < 1 / 3) {\n        b = (1 - s) / 3;\n        r = (1 + (s * cos(TWOPI * h)) / cos(PITHIRD - TWOPI * h)) / 3;\n        g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n        h -= 1 / 3;\n        r = (1 - s) / 3;\n        g = (1 + (s * cos(TWOPI * h)) / cos(PITHIRD - TWOPI * h)) / 3;\n        b = 1 - (r + g);\n    } else {\n        h -= 2 / 3;\n        g = (1 - s) / 3;\n        b = (1 + (s * cos(TWOPI * h)) / cos(PITHIRD - TWOPI * h)) / 3;\n        r = 1 - (g + b);\n    }\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n};\n\nexport default hsi2rgb;\n","import { unpack, TWOPI } from '../../utils/index.js';\nconst { min, sqrt, acos } = Math;\n\nconst rgb2hsi = (...args) => {\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n    */\n    let [r, g, b] = unpack(args, 'rgb');\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let h;\n    const min_ = min(r, g, b);\n    const i = (r + g + b) / 3;\n    const s = i > 0 ? 1 - min_ / i : 0;\n    if (s === 0) {\n        h = NaN;\n    } else {\n        h = (r - g + (r - b)) / 2;\n        h /= sqrt((r - g) * (r - g) + (r - b) * (g - b));\n        h = acos(h);\n        if (b > g) {\n            h = TWOPI - h;\n        }\n        h /= TWOPI;\n    }\n    return [h * 360, s, i];\n};\n\nexport default rgb2hsi;\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport hsi2rgb from './hsi2rgb.js';\nimport rgb2hsi from './rgb2hsi.js';\n\nColor.prototype.hsi = function () {\n    return rgb2hsi(this._rgb);\n};\n\nconst hsi = (...args) => new Color(...args, 'hsi');\nchroma.hsi = hsi;\n\ninput.format.hsi = hsi2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'hsi');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'hsi';\n        }\n    }\n});\n\nexport { hsi };\n","import '../io/hsi/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst hsi = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'hsi');\n};\n\n// register interpolator\nindex.hsi = hsi;\n\nexport default hsi;\n","import { unpack } from '../../utils/index.js';\n\nconst hsl2rgb = (...args) => {\n    args = unpack(args, 'hsl');\n    const [h, s, l] = args;\n    let r, g, b;\n    if (s === 0) {\n        r = g = b = l * 255;\n    } else {\n        const t3 = [0, 0, 0];\n        const c = [0, 0, 0];\n        const t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const t1 = 2 * l - t2;\n        const h_ = h / 360;\n        t3[0] = h_ + 1 / 3;\n        t3[1] = h_;\n        t3[2] = h_ - 1 / 3;\n        for (let i = 0; i < 3; i++) {\n            if (t3[i] < 0) t3[i] += 1;\n            if (t3[i] > 1) t3[i] -= 1;\n            if (6 * t3[i] < 1) c[i] = t1 + (t2 - t1) * 6 * t3[i];\n            else if (2 * t3[i] < 1) c[i] = t2;\n            else if (3 * t3[i] < 2) c[i] = t1 + (t2 - t1) * (2 / 3 - t3[i]) * 6;\n            else c[i] = t1;\n        }\n        [r, g, b] = [c[0] * 255, c[1] * 255, c[2] * 255];\n    }\n    if (args.length > 3) {\n        // keep alpha channel\n        return [r, g, b, args[3]];\n    }\n    return [r, g, b, 1];\n};\n\nexport default hsl2rgb;\n","import { unpack, min, max } from '../../utils/index.js';\n\n/*\n * supported arguments:\n * - rgb2hsl(r,g,b)\n * - rgb2hsl(r,g,b,a)\n * - rgb2hsl([r,g,b])\n * - rgb2hsl([r,g,b,a])\n * - rgb2hsl({r,g,b,a})\n */\nconst rgb2hsl = (...args) => {\n    args = unpack(args, 'rgba');\n    let [r, g, b] = args;\n\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    const minRgb = min(r, g, b);\n    const maxRgb = max(r, g, b);\n\n    const l = (maxRgb + minRgb) / 2;\n    let s, h;\n\n    if (maxRgb === minRgb) {\n        s = 0;\n        h = Number.NaN;\n    } else {\n        s =\n            l < 0.5\n                ? (maxRgb - minRgb) / (maxRgb + minRgb)\n                : (maxRgb - minRgb) / (2 - maxRgb - minRgb);\n    }\n\n    if (r == maxRgb) h = (g - b) / (maxRgb - minRgb);\n    else if (g == maxRgb) h = 2 + (b - r) / (maxRgb - minRgb);\n    else if (b == maxRgb) h = 4 + (r - g) / (maxRgb - minRgb);\n\n    h *= 60;\n    if (h < 0) h += 360;\n    if (args.length > 3 && args[3] !== undefined) return [h, s, l, args[3]];\n    return [h, s, l];\n};\n\nexport default rgb2hsl;\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport hsl2rgb from './hsl2rgb.js';\nimport rgb2hsl from './rgb2hsl.js';\n\nColor.prototype.hsl = function () {\n    return rgb2hsl(this._rgb);\n};\n\nconst hsl = (...args) => new Color(...args, 'hsl');\nchroma.hsl = hsl;\n\ninput.format.hsl = hsl2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'hsl');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'hsl';\n        }\n    }\n});\n\nexport { hsl };\n","import '../io/hsl/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst hsl = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'hsl');\n};\n\n// register interpolator\nindex.hsl = hsl;\n\nexport default hsl;\n","import { unpack } from '../../utils/index.js';\nconst { floor } = Math;\n\nconst hsv2rgb = (...args) => {\n    args = unpack(args, 'hsv');\n    let [h, s, v] = args;\n    let r, g, b;\n    v *= 255;\n    if (s === 0) {\n        r = g = b = v;\n    } else {\n        if (h === 360) h = 0;\n        if (h > 360) h -= 360;\n        if (h < 0) h += 360;\n        h /= 60;\n\n        const i = floor(h);\n        const f = h - i;\n        const p = v * (1 - s);\n        const q = v * (1 - s * f);\n        const t = v * (1 - s * (1 - f));\n\n        switch (i) {\n            case 0:\n                [r, g, b] = [v, t, p];\n                break;\n            case 1:\n                [r, g, b] = [q, v, p];\n                break;\n            case 2:\n                [r, g, b] = [p, v, t];\n                break;\n            case 3:\n                [r, g, b] = [p, q, v];\n                break;\n            case 4:\n                [r, g, b] = [t, p, v];\n                break;\n            case 5:\n                [r, g, b] = [v, p, q];\n                break;\n        }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n};\n\nexport default hsv2rgb;\n","import { unpack } from '../../utils/index.js';\nconst { min, max } = Math;\n\n/*\n * supported arguments:\n * - rgb2hsv(r,g,b)\n * - rgb2hsv([r,g,b])\n * - rgb2hsv({r,g,b})\n */\nconst rgb2hsl = (...args) => {\n    args = unpack(args, 'rgb');\n    let [r, g, b] = args;\n    const min_ = min(r, g, b);\n    const max_ = max(r, g, b);\n    const delta = max_ - min_;\n    let h, s, v;\n    v = max_ / 255.0;\n    if (max_ === 0) {\n        h = Number.NaN;\n        s = 0;\n    } else {\n        s = delta / max_;\n        if (r === max_) h = (g - b) / delta;\n        if (g === max_) h = 2 + (b - r) / delta;\n        if (b === max_) h = 4 + (r - g) / delta;\n        h *= 60;\n        if (h < 0) h += 360;\n    }\n    return [h, s, v];\n};\n\nexport default rgb2hsl;\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport hsv2rgb from './hsv2rgb.js';\nimport rgb2hsv from './rgb2hsv.js';\n\nColor.prototype.hsv = function () {\n    return rgb2hsv(this._rgb);\n};\n\nconst hsv = (...args) => new Color(...args, 'hsv');\nchroma.hsv = hsv;\n\ninput.format.hsv = hsv2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'hsv');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'hsv';\n        }\n    }\n});\n\nexport { hsv };\n","// from https://www.w3.org/TR/css-color-4/multiply-matrices.js\nexport default function multiplyMatrices(A, B) {\n    let m = A.length;\n\n    if (!Array.isArray(A[0])) {\n        // A is vector, convert to [[a, b, c, ...]]\n        A = [A];\n    }\n\n    if (!Array.isArray(B[0])) {\n        // B is vector, convert to [[a], [b], [c], ...]]\n        B = B.map((x) => [x]);\n    }\n\n    let p = B[0].length;\n    let B_cols = B[0].map((_, i) => B.map((x) => x[i])); // transpose B\n    let product = A.map((row) =>\n        B_cols.map((col) => {\n            if (!Array.isArray(row)) {\n                return col.reduce((a, c) => a + c * row, 0);\n            }\n\n            return row.reduce((a, c, i) => a + c * (col[i] || 0), 0);\n        })\n    );\n\n    if (m === 1) {\n        product = product[0]; // Avoid [[a, b, c, ...]]\n    }\n\n    if (p === 1) {\n        return product.map((x) => x[0]); // Avoid [[a], [b], [c], ...]]\n    }\n\n    return product;\n}\n","import '../io/hsv/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst hsv = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'hsv');\n};\n\n// register interpolator\nindex.hsv = hsv;\n\nexport default hsv;\n","import { unpack } from '../../utils/index.js';\nimport multiplyMatrices from '../../utils/multiply-matrices.js';\nimport { xyz2rgb } from '../lab/lab2rgb.js';\n\nconst oklab2rgb = (...args) => {\n    args = unpack(args, 'lab');\n    const [L, a, b, ...rest] = args;\n    const [X, Y, Z] = OKLab_to_XYZ([L, a, b]);\n    const [r, g, b_] = xyz2rgb(X, Y, Z);\n    return [r, g, b_, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\n// from https://www.w3.org/TR/css-color-4/#color-conversion-code\nfunction OKLab_to_XYZ(OKLab) {\n    // Given OKLab, convert to XYZ relative to D65\n    var LMStoXYZ = [\n        [1.2268798758459243, -0.5578149944602171, 0.2813910456659647],\n        [-0.0405757452148008, 1.112286803280317, -0.0717110580655164],\n        [-0.0763729366746601, -0.4214933324022432, 1.5869240198367816]\n    ];\n    var OKLabtoLMS = [\n        [1.0, 0.3963377773761749, 0.2158037573099136],\n        [1.0, -0.1055613458156586, -0.0638541728258133],\n        [1.0, -0.0894841775298119, -1.2914855480194092]\n    ];\n\n    var LMSnl = multiplyMatrices(OKLabtoLMS, OKLab);\n    return multiplyMatrices(\n        LMStoXYZ,\n        LMSnl.map((c) => c ** 3)\n    );\n}\n\nexport default oklab2rgb;\n","import { unpack } from '../../utils/index.js';\nimport multiplyMatrices from '../../utils/multiply-matrices.js';\nimport { rgb2xyz } from '../lab/rgb2lab.js';\n\nconst rgb2oklab = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const xyz = rgb2xyz(r, g, b);\n    const oklab = XYZ_to_OKLab(xyz);\n    return [...oklab, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\n// from https://www.w3.org/TR/css-color-4/#color-conversion-code\nfunction XYZ_to_OKLab(XYZ) {\n    // Given XYZ relative to D65, convert to OKLab\n    const XYZtoLMS = [\n        [0.819022437996703, 0.3619062600528904, -0.1288737815209879],\n        [0.0329836539323885, 0.9292868615863434, 0.0361446663506424],\n        [0.0481771893596242, 0.2642395317527308, 0.6335478284694309]\n    ];\n    const LMStoOKLab = [\n        [0.210454268309314, 0.7936177747023054, -0.0040720430116193],\n        [1.9779985324311684, -2.4285922420485799, 0.450593709617411],\n        [0.0259040424655478, 0.7827717124575296, -0.8086757549230774]\n    ];\n\n    const LMS = multiplyMatrices(XYZtoLMS, XYZ);\n    // JavaScript Math.cbrt returns a sign-matched cube root\n    // beware if porting to other languages\n    // especially if tempted to use a general power function\n    return multiplyMatrices(\n        LMStoOKLab,\n        LMS.map((c) => Math.cbrt(c))\n    );\n    // L in range [0,1]. For use in CSS, multiply by 100 and add a percent\n}\n\nexport default rgb2oklab;\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport oklab2rgb from './oklab2rgb.js';\nimport rgb2oklab from './rgb2oklab.js';\n\nColor.prototype.oklab = function () {\n    return rgb2oklab(this._rgb);\n};\n\nconst oklab = (...args) => new Color(...args, 'oklab');\nObject.assign(chroma, { oklab });\n\ninput.format.oklab = oklab2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'oklab');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'oklab';\n        }\n    }\n});\n\nexport { oklab };\n","import '../io/oklab/index.js';\nimport index from './index.js';\nimport Color from '../Color.js';\n\nconst oklab = (col1, col2, f) => {\n    const xyz0 = col1.oklab();\n    const xyz1 = col2.oklab();\n    return new Color(\n        xyz0[0] + f * (xyz1[0] - xyz0[0]),\n        xyz0[1] + f * (xyz1[1] - xyz0[1]),\n        xyz0[2] + f * (xyz1[2] - xyz0[2]),\n        'oklab'\n    );\n};\n\n// register interpolator\nindex.oklab = oklab;\n\nexport default oklab;\n","import '../io/lch/index.js';\nimport interpolate_hsx from './_hsx.js';\nimport index from './index.js';\n\nconst oklch = (col1, col2, f) => {\n    return interpolate_hsx(col1, col2, f, 'oklch');\n};\n\n// register interpolator\nindex.oklch = oklch;\n\nexport default oklch;\n","import Color from '../Color.js';\nimport { clip_rgb } from '../utils/index.js';\n\nconst { pow, sqrt, PI, cos, sin, atan2 } = Math;\n\nexport default (colors, mode = 'lrgb', weights = null) => {\n    const l = colors.length;\n    if (!weights) weights = Array.from(new Array(l)).map(() => 1);\n    // normalize weights\n    const k =\n        l /\n        weights.reduce(function (a, b) {\n            return a + b;\n        });\n    weights.forEach((w, i) => {\n        weights[i] *= k;\n    });\n    // convert colors to Color objects\n    colors = colors.map((c) => new Color(c));\n    if (mode === 'lrgb') {\n        return _average_lrgb(colors, weights);\n    }\n    const first = colors.shift();\n    const xyz = first.get(mode);\n    const cnt = [];\n    let dx = 0;\n    let dy = 0;\n    // initial color\n    for (let i = 0; i < xyz.length; i++) {\n        xyz[i] = (xyz[i] || 0) * weights[0];\n        cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n        if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n            const A = (xyz[i] / 180) * PI;\n            dx += cos(A) * weights[0];\n            dy += sin(A) * weights[0];\n        }\n    }\n\n    let alpha = first.alpha() * weights[0];\n    colors.forEach((c, ci) => {\n        const xyz2 = c.get(mode);\n        alpha += c.alpha() * weights[ci + 1];\n        for (let i = 0; i < xyz.length; i++) {\n            if (!isNaN(xyz2[i])) {\n                cnt[i] += weights[ci + 1];\n                if (mode.charAt(i) === 'h') {\n                    const A = (xyz2[i] / 180) * PI;\n                    dx += cos(A) * weights[ci + 1];\n                    dy += sin(A) * weights[ci + 1];\n                } else {\n                    xyz[i] += xyz2[i] * weights[ci + 1];\n                }\n            }\n        }\n    });\n\n    for (let i = 0; i < xyz.length; i++) {\n        if (mode.charAt(i) === 'h') {\n            let A = (atan2(dy / cnt[i], dx / cnt[i]) / PI) * 180;\n            while (A < 0) A += 360;\n            while (A >= 360) A -= 360;\n            xyz[i] = A;\n        } else {\n            xyz[i] = xyz[i] / cnt[i];\n        }\n    }\n    alpha /= l;\n    return new Color(xyz, mode).alpha(alpha > 0.99999 ? 1 : alpha, true);\n};\n\nconst _average_lrgb = (colors, weights) => {\n    const l = colors.length;\n    const xyz = [0, 0, 0, 0];\n    for (let i = 0; i < colors.length; i++) {\n        const col = colors[i];\n        const f = weights[i] / l;\n        const rgb = col._rgb;\n        xyz[0] += pow(rgb[0], 2) * f;\n        xyz[1] += pow(rgb[1], 2) * f;\n        xyz[2] += pow(rgb[2], 2) * f;\n        xyz[3] += rgb[3] * f;\n    }\n    xyz[0] = sqrt(xyz[0]);\n    xyz[1] = sqrt(xyz[1]);\n    xyz[2] = sqrt(xyz[2]);\n    if (xyz[3] > 0.9999999) xyz[3] = 1;\n    return new Color(clip_rgb(xyz));\n};\n","// minimal multi-purpose interface\n\n// @requires utils color analyze\nimport chroma from '../chroma.js';\nimport { limit, type } from '../utils/index.js';\n\nconst { pow } = Math;\n\nexport default function (colors) {\n    // constructor\n    let _mode = 'rgb';\n    let _nacol = chroma('#ccc');\n    let _spread = 0;\n    // const _fixed = false;\n    let _domain = [0, 1];\n    let _pos = [];\n    let _padding = [0, 0];\n    let _classes = false;\n    let _colors = [];\n    let _out = false;\n    let _min = 0;\n    let _max = 1;\n    let _correctLightness = false;\n    let _colorCache = {};\n    let _useCache = true;\n    let _gamma = 1;\n\n    // private methods\n\n    const setColors = function (colors) {\n        colors = colors || ['#fff', '#000'];\n        if (\n            colors &&\n            type(colors) === 'string' &&\n            chroma.brewer &&\n            chroma.brewer[colors.toLowerCase()]\n        ) {\n            colors = chroma.brewer[colors.toLowerCase()];\n        }\n        if (type(colors) === 'array') {\n            // handle single color\n            if (colors.length === 1) {\n                colors = [colors[0], colors[0]];\n            }\n            // make a copy of the colors\n            colors = colors.slice(0);\n            // convert to chroma classes\n            for (let c = 0; c < colors.length; c++) {\n                colors[c] = chroma(colors[c]);\n            }\n            // auto-fill color position\n            _pos.length = 0;\n            for (let c = 0; c < colors.length; c++) {\n                _pos.push(c / (colors.length - 1));\n            }\n        }\n        resetCache();\n        return (_colors = colors);\n    };\n\n    const getClass = function (value) {\n        if (_classes != null) {\n            const n = _classes.length - 1;\n            let i = 0;\n            while (i < n && value >= _classes[i]) {\n                i++;\n            }\n            return i - 1;\n        }\n        return 0;\n    };\n\n    let tMapLightness = (t) => t;\n    let tMapDomain = (t) => t;\n\n    // const classifyValue = function(value) {\n    //     let val = value;\n    //     if (_classes.length > 2) {\n    //         const n = _classes.length-1;\n    //         const i = getClass(value);\n    //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n    //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n    //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n    //     }\n    //     return val;\n    // };\n\n    const getColor = function (val, bypassMap) {\n        let col, t;\n        if (bypassMap == null) {\n            bypassMap = false;\n        }\n        if (isNaN(val) || val === null) {\n            return _nacol;\n        }\n        if (!bypassMap) {\n            if (_classes && _classes.length > 2) {\n                // find the class\n                const c = getClass(val);\n                t = c / (_classes.length - 2);\n            } else if (_max !== _min) {\n                // just interpolate between min/max\n                t = (val - _min) / (_max - _min);\n            } else {\n                t = 1;\n            }\n        } else {\n            t = val;\n        }\n\n        // domain map\n        t = tMapDomain(t);\n\n        if (!bypassMap) {\n            t = tMapLightness(t); // lightness correction\n        }\n\n        if (_gamma !== 1) {\n            t = pow(t, _gamma);\n        }\n\n        t = _padding[0] + t * (1 - _padding[0] - _padding[1]);\n\n        t = limit(t, 0, 1);\n\n        const k = Math.floor(t * 10000);\n\n        if (_useCache && _colorCache[k]) {\n            col = _colorCache[k];\n        } else {\n            if (type(_colors) === 'array') {\n                //for i in [0.._pos.length-1]\n                for (let i = 0; i < _pos.length; i++) {\n                    const p = _pos[i];\n                    if (t <= p) {\n                        col = _colors[i];\n                        break;\n                    }\n                    if (t >= p && i === _pos.length - 1) {\n                        col = _colors[i];\n                        break;\n                    }\n                    if (t > p && t < _pos[i + 1]) {\n                        t = (t - p) / (_pos[i + 1] - p);\n                        col = chroma.interpolate(\n                            _colors[i],\n                            _colors[i + 1],\n                            t,\n                            _mode\n                        );\n                        break;\n                    }\n                }\n            } else if (type(_colors) === 'function') {\n                col = _colors(t);\n            }\n            if (_useCache) {\n                _colorCache[k] = col;\n            }\n        }\n        return col;\n    };\n\n    var resetCache = () => (_colorCache = {});\n\n    setColors(colors);\n\n    // public interface\n\n    const f = function (v) {\n        const c = chroma(getColor(v));\n        if (_out && c[_out]) {\n            return c[_out]();\n        } else {\n            return c;\n        }\n    };\n\n    f.classes = function (classes) {\n        if (classes != null) {\n            if (type(classes) === 'array') {\n                _classes = classes;\n                _domain = [classes[0], classes[classes.length - 1]];\n            } else {\n                const d = chroma.analyze(_domain);\n                if (classes === 0) {\n                    _classes = [d.min, d.max];\n                } else {\n                    _classes = chroma.limits(d, 'e', classes);\n                }\n            }\n            return f;\n        }\n        return _classes;\n    };\n\n    f.domain = function (domain) {\n        if (!arguments.length) {\n            return _domain;\n        }\n        _min = domain[0];\n        _max = domain[domain.length - 1];\n        _pos = [];\n        const k = _colors.length;\n        if (domain.length === k && _min !== _max) {\n            // update positions\n            for (let d of Array.from(domain)) {\n                _pos.push((d - _min) / (_max - _min));\n            }\n        } else {\n            for (let c = 0; c < k; c++) {\n                _pos.push(c / (k - 1));\n            }\n            if (domain.length > 2) {\n                // set domain map\n                const tOut = domain.map((d, i) => i / (domain.length - 1));\n                const tBreaks = domain.map((d) => (d - _min) / (_max - _min));\n                if (!tBreaks.every((val, i) => tOut[i] === val)) {\n                    tMapDomain = (t) => {\n                        if (t <= 0 || t >= 1) return t;\n                        let i = 0;\n                        while (t >= tBreaks[i + 1]) i++;\n                        const f =\n                            (t - tBreaks[i]) / (tBreaks[i + 1] - tBreaks[i]);\n                        const out = tOut[i] + f * (tOut[i + 1] - tOut[i]);\n                        return out;\n                    };\n                }\n            }\n        }\n        _domain = [_min, _max];\n        return f;\n    };\n\n    f.mode = function (_m) {\n        if (!arguments.length) {\n            return _mode;\n        }\n        _mode = _m;\n        resetCache();\n        return f;\n    };\n\n    f.range = function (colors, _pos) {\n        setColors(colors, _pos);\n        return f;\n    };\n\n    f.out = function (_o) {\n        _out = _o;\n        return f;\n    };\n\n    f.spread = function (val) {\n        if (!arguments.length) {\n            return _spread;\n        }\n        _spread = val;\n        return f;\n    };\n\n    f.correctLightness = function (v) {\n        if (v == null) {\n            v = true;\n        }\n        _correctLightness = v;\n        resetCache();\n        if (_correctLightness) {\n            tMapLightness = function (t) {\n                const L0 = getColor(0, true).lab()[0];\n                const L1 = getColor(1, true).lab()[0];\n                const pol = L0 > L1;\n                let L_actual = getColor(t, true).lab()[0];\n                const L_ideal = L0 + (L1 - L0) * t;\n                let L_diff = L_actual - L_ideal;\n                let t0 = 0;\n                let t1 = 1;\n                let max_iter = 20;\n                while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n                    (function () {\n                        if (pol) {\n                            L_diff *= -1;\n                        }\n                        if (L_diff < 0) {\n                            t0 = t;\n                            t += (t1 - t) * 0.5;\n                        } else {\n                            t1 = t;\n                            t += (t0 - t) * 0.5;\n                        }\n                        L_actual = getColor(t, true).lab()[0];\n                        return (L_diff = L_actual - L_ideal);\n                    })();\n                }\n                return t;\n            };\n        } else {\n            tMapLightness = (t) => t;\n        }\n        return f;\n    };\n\n    f.padding = function (p) {\n        if (p != null) {\n            if (type(p) === 'number') {\n                p = [p, p];\n            }\n            _padding = p;\n            return f;\n        } else {\n            return _padding;\n        }\n    };\n\n    f.colors = function (numColors, out) {\n        // If no arguments are given, return the original colors that were provided\n        if (arguments.length < 2) {\n            out = 'hex';\n        }\n        let result = [];\n\n        if (arguments.length === 0) {\n            result = _colors.slice(0);\n        } else if (numColors === 1) {\n            result = [f(0.5)];\n        } else if (numColors > 1) {\n            const dm = _domain[0];\n            const dd = _domain[1] - dm;\n            result = __range__(0, numColors, false).map((i) =>\n                f(dm + (i / (numColors - 1)) * dd)\n            );\n        } else {\n            // returns all colors based on the defined classes\n            colors = [];\n            let samples = [];\n            if (_classes && _classes.length > 2) {\n                for (\n                    let i = 1, end = _classes.length, asc = 1 <= end;\n                    asc ? i < end : i > end;\n                    asc ? i++ : i--\n                ) {\n                    samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n                }\n            } else {\n                samples = _domain;\n            }\n            result = samples.map((v) => f(v));\n        }\n\n        if (chroma[out]) {\n            result = result.map((c) => c[out]());\n        }\n        return result;\n    };\n\n    f.cache = function (c) {\n        if (c != null) {\n            _useCache = c;\n            return f;\n        } else {\n            return _useCache;\n        }\n    };\n\n    f.gamma = function (g) {\n        if (g != null) {\n            _gamma = g;\n            return f;\n        } else {\n            return _gamma;\n        }\n    };\n\n    f.nodata = function (d) {\n        if (d != null) {\n            _nacol = chroma(d);\n            return f;\n        } else {\n            return _nacol;\n        }\n    };\n\n    return f;\n}\n\nfunction __range__(left, right, inclusive) {\n    let range = [];\n    let ascending = left < right;\n    let end = !inclusive ? right : ascending ? right + 1 : right - 1;\n    for (let i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n    }\n    return range;\n}\n","//\n// interpolates between a set of colors uzing a bezier spline\n//\n\n// @requires utils lab\nimport Color from '../Color.js';\nimport '../io/lab/index.js';\nimport scale from './scale.js';\n\n// nth row of the pascal triangle\nconst binom_row = function (n) {\n    let row = [1, 1];\n    for (let i = 1; i < n; i++) {\n        let newrow = [1];\n        for (let j = 1; j <= row.length; j++) {\n            newrow[j] = (row[j] || 0) + row[j - 1];\n        }\n        row = newrow;\n    }\n    return row;\n};\n\nconst bezier = function (colors) {\n    let I, lab0, lab1, lab2;\n    colors = colors.map((c) => new Color(c));\n    if (colors.length === 2) {\n        // linear interpolation\n        [lab0, lab1] = colors.map((c) => c.lab());\n        I = function (t) {\n            const lab = [0, 1, 2].map((i) => lab0[i] + t * (lab1[i] - lab0[i]));\n            return new Color(lab, 'lab');\n        };\n    } else if (colors.length === 3) {\n        // quadratic bezier interpolation\n        [lab0, lab1, lab2] = colors.map((c) => c.lab());\n        I = function (t) {\n            const lab = [0, 1, 2].map(\n                (i) =>\n                    (1 - t) * (1 - t) * lab0[i] +\n                    2 * (1 - t) * t * lab1[i] +\n                    t * t * lab2[i]\n            );\n            return new Color(lab, 'lab');\n        };\n    } else if (colors.length === 4) {\n        // cubic bezier interpolation\n        let lab3;\n        [lab0, lab1, lab2, lab3] = colors.map((c) => c.lab());\n        I = function (t) {\n            const lab = [0, 1, 2].map(\n                (i) =>\n                    (1 - t) * (1 - t) * (1 - t) * lab0[i] +\n                    3 * (1 - t) * (1 - t) * t * lab1[i] +\n                    3 * (1 - t) * t * t * lab2[i] +\n                    t * t * t * lab3[i]\n            );\n            return new Color(lab, 'lab');\n        };\n    } else if (colors.length >= 5) {\n        // general case (degree n bezier)\n        let labs, row, n;\n        labs = colors.map((c) => c.lab());\n        n = colors.length - 1;\n        row = binom_row(n);\n        I = function (t) {\n            const u = 1 - t;\n            const lab = [0, 1, 2].map((i) =>\n                labs.reduce(\n                    (sum, el, j) =>\n                        sum + row[j] * u ** (n - j) * t ** j * el[i],\n                    0\n                )\n            );\n            return new Color(lab, 'lab');\n        };\n    } else {\n        throw new RangeError('No point in running bezier with only one color.');\n    }\n    return I;\n};\n\nexport default (colors) => {\n    const f = bezier(colors);\n    f.scale = () => scale(f);\n    return f;\n};\n","import chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport { unpack, type } from '../../utils/index.js';\nconst { round } = Math;\n\nColor.prototype.rgb = function (rnd = true) {\n    if (rnd === false) return this._rgb.slice(0, 3);\n    return this._rgb.slice(0, 3).map(round);\n};\n\nColor.prototype.rgba = function (rnd = true) {\n    return this._rgb.slice(0, 4).map((v, i) => {\n        return i < 3 ? (rnd === false ? v : round(v)) : v;\n    });\n};\n\nconst rgb = (...args) => new Color(...args, 'rgb');\nObject.assign(chroma, { rgb });\n\ninput.format.rgb = (...args) => {\n    const rgba = unpack(args, 'rgba');\n    if (rgba[3] === undefined) rgba[3] = 1;\n    return rgba;\n};\n\ninput.autodetect.push({\n    p: 3,\n    test: (...args) => {\n        args = unpack(args, 'rgba');\n        if (\n            type(args) === 'array' &&\n            (args.length === 3 ||\n                (args.length === 4 &&\n                    type(args[3]) == 'number' &&\n                    args[3] >= 0 &&\n                    args[3] <= 1))\n        ) {\n            return 'rgb';\n        }\n    }\n});\n\nexport { rgb };\n","/*\n * interpolates between a set of colors uzing a bezier spline\n * blend mode formulas taken from https://web.archive.org/web/20180110014946/http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n */\n\nimport '../io/rgb/index.js';\nimport chroma from '../chroma.js';\n\nconst blend = (bottom, top, mode) => {\n    if (!blend[mode]) {\n        throw new Error('unknown blend mode ' + mode);\n    }\n    return blend[mode](bottom, top);\n};\n\nconst blend_f = (f) => (bottom, top) => {\n    const c0 = chroma(top).rgb();\n    const c1 = chroma(bottom).rgb();\n    return chroma.rgb(f(c0, c1));\n};\n\nconst each = (f) => (c0, c1) => {\n    const out = [];\n    out[0] = f(c0[0], c1[0]);\n    out[1] = f(c0[1], c1[1]);\n    out[2] = f(c0[2], c1[2]);\n    return out;\n};\n\nconst normal = (a) => a;\nconst multiply = (a, b) => (a * b) / 255;\nconst darken = (a, b) => (a > b ? b : a);\nconst lighten = (a, b) => (a > b ? a : b);\nconst screen = (a, b) => 255 * (1 - (1 - a / 255) * (1 - b / 255));\nconst overlay = (a, b) =>\n    b < 128 ? (2 * a * b) / 255 : 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\nconst burn = (a, b) => 255 * (1 - (1 - b / 255) / (a / 255));\nconst dodge = (a, b) => {\n    if (a === 255) return 255;\n    a = (255 * (b / 255)) / (1 - a / 255);\n    return a > 255 ? 255 : a;\n};\n\n// # add = (a,b) ->\n// #     if (a + b > 255) then 255 else a + b\n\nblend.normal = blend_f(each(normal));\nblend.multiply = blend_f(each(multiply));\nblend.screen = blend_f(each(screen));\nblend.overlay = blend_f(each(overlay));\nblend.darken = blend_f(each(darken));\nblend.lighten = blend_f(each(lighten));\nblend.dodge = blend_f(each(dodge));\nblend.burn = blend_f(each(burn));\n// blend.add = blend_f(each(add));\n\nexport default blend;\n","// cubehelix interpolation\n// based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n// http://astron-soc.in/bulletin/11June/289392011.pdf\nimport { type, clip_rgb, TWOPI } from '../utils/index.js';\nimport chroma from '../chroma.js';\nconst { pow, sin, cos } = Math;\n\nexport default function (\n    start = 300,\n    rotations = -1.5,\n    hue = 1,\n    gamma = 1,\n    lightness = [0, 1]\n) {\n    let dh = 0,\n        dl;\n    if (type(lightness) === 'array') {\n        dl = lightness[1] - lightness[0];\n    } else {\n        dl = 0;\n        lightness = [lightness, lightness];\n    }\n    const f = function (fract) {\n        const a = TWOPI * ((start + 120) / 360 + rotations * fract);\n        const l = pow(lightness[0] + dl * fract, gamma);\n        const h = dh !== 0 ? hue[0] + fract * dh : hue;\n        const amp = (h * l * (1 - l)) / 2;\n        const cos_a = cos(a);\n        const sin_a = sin(a);\n        const r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n        const g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n        const b = l + amp * (+1.97294 * cos_a);\n        return chroma(clip_rgb([r * 255, g * 255, b * 255, 1]));\n    };\n    f.start = function (s) {\n        if (s == null) {\n            return start;\n        }\n        start = s;\n        return f;\n    };\n    f.rotations = function (r) {\n        if (r == null) {\n            return rotations;\n        }\n        rotations = r;\n        return f;\n    };\n    f.gamma = function (g) {\n        if (g == null) {\n            return gamma;\n        }\n        gamma = g;\n        return f;\n    };\n    f.hue = function (h) {\n        if (h == null) {\n            return hue;\n        }\n        hue = h;\n        if (type(hue) === 'array') {\n            dh = hue[1] - hue[0];\n            if (dh === 0) {\n                hue = hue[1];\n            }\n        } else {\n            dh = 0;\n        }\n        return f;\n    };\n    f.lightness = function (h) {\n        if (h == null) {\n            return lightness;\n        }\n        if (type(h) === 'array') {\n            lightness = h;\n            dl = h[1] - h[0];\n        } else {\n            lightness = [h, h];\n            dl = 0;\n        }\n        return f;\n    };\n    f.scale = () => chroma.scale(f);\n    f.hue(hue);\n    return f;\n}\n","import Color from '../Color.js';\nconst digits = '0123456789abcdef';\n\nconst { floor, random } = Math;\n\nexport default () => {\n    let code = '#';\n    for (let i = 0; i < 6; i++) {\n        code += digits.charAt(floor(random() * 16));\n    }\n    return new Color(code, 'hex');\n};\n","import type from './type.js';\n\nconst { log, pow, floor, abs } = Math;\n\nexport function analyze(data, key = null) {\n    const r = {\n        min: Number.MAX_VALUE,\n        max: Number.MAX_VALUE * -1,\n        sum: 0,\n        values: [],\n        count: 0\n    };\n    if (type(data) === 'object') {\n        data = Object.values(data);\n    }\n    data.forEach((val) => {\n        if (key && type(val) === 'object') val = val[key];\n        if (val !== undefined && val !== null && !isNaN(val)) {\n            r.values.push(val);\n            r.sum += val;\n            if (val < r.min) r.min = val;\n            if (val > r.max) r.max = val;\n            r.count += 1;\n        }\n    });\n\n    r.domain = [r.min, r.max];\n\n    r.limits = (mode, num) => limits(r, mode, num);\n\n    return r;\n}\n\nexport function limits(data, mode = 'equal', num = 7) {\n    if (type(data) == 'array') {\n        data = analyze(data);\n    }\n    const { min, max } = data;\n    const values = data.values.sort((a, b) => a - b);\n\n    if (num === 1) {\n        return [min, max];\n    }\n\n    const limits = [];\n\n    if (mode.substr(0, 1) === 'c') {\n        // continuous\n        limits.push(min);\n        limits.push(max);\n    }\n\n    if (mode.substr(0, 1) === 'e') {\n        // equal interval\n        limits.push(min);\n        for (let i = 1; i < num; i++) {\n            limits.push(min + (i / num) * (max - min));\n        }\n        limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n        // log scale\n        if (min <= 0) {\n            throw new Error(\n                'Logarithmic scales are only possible for values > 0'\n            );\n        }\n        const min_log = Math.LOG10E * log(min);\n        const max_log = Math.LOG10E * log(max);\n        limits.push(min);\n        for (let i = 1; i < num; i++) {\n            limits.push(pow(10, min_log + (i / num) * (max_log - min_log)));\n        }\n        limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n        // quantile scale\n        limits.push(min);\n        for (let i = 1; i < num; i++) {\n            const p = ((values.length - 1) * i) / num;\n            const pb = floor(p);\n            if (pb === p) {\n                limits.push(values[pb]);\n            } else {\n                // p > pb\n                const pr = p - pb;\n                limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n            }\n        }\n        limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n        // k-means clustering\n        /*\n        implementation based on\n        http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n        simplified for 1-d input values\n        */\n        let cluster;\n        const n = values.length;\n        const assignments = new Array(n);\n        const clusterSizes = new Array(num);\n        let repeat = true;\n        let nb_iters = 0;\n        let centroids = null;\n\n        // get seed values\n        centroids = [];\n        centroids.push(min);\n        for (let i = 1; i < num; i++) {\n            centroids.push(min + (i / num) * (max - min));\n        }\n        centroids.push(max);\n\n        while (repeat) {\n            // assignment step\n            for (let j = 0; j < num; j++) {\n                clusterSizes[j] = 0;\n            }\n            for (let i = 0; i < n; i++) {\n                const value = values[i];\n                let mindist = Number.MAX_VALUE;\n                let best;\n                for (let j = 0; j < num; j++) {\n                    const dist = abs(centroids[j] - value);\n                    if (dist < mindist) {\n                        mindist = dist;\n                        best = j;\n                    }\n                    clusterSizes[best]++;\n                    assignments[i] = best;\n                }\n            }\n\n            // update centroids step\n            const newCentroids = new Array(num);\n            for (let j = 0; j < num; j++) {\n                newCentroids[j] = null;\n            }\n            for (let i = 0; i < n; i++) {\n                cluster = assignments[i];\n                if (newCentroids[cluster] === null) {\n                    newCentroids[cluster] = values[i];\n                } else {\n                    newCentroids[cluster] += values[i];\n                }\n            }\n            for (let j = 0; j < num; j++) {\n                newCentroids[j] *= 1 / clusterSizes[j];\n            }\n\n            // check convergence\n            repeat = false;\n            for (let j = 0; j < num; j++) {\n                if (newCentroids[j] !== centroids[j]) {\n                    repeat = true;\n                    break;\n                }\n            }\n\n            centroids = newCentroids;\n            nb_iters++;\n\n            if (nb_iters > 200) {\n                repeat = false;\n            }\n        }\n\n        // finished k-means clustering\n        // the next part is borrowed from gabrielflor.it\n        const kClusters = {};\n        for (let j = 0; j < num; j++) {\n            kClusters[j] = [];\n        }\n        for (let i = 0; i < n; i++) {\n            cluster = assignments[i];\n            kClusters[cluster].push(values[i]);\n        }\n        let tmpKMeansBreaks = [];\n        for (let j = 0; j < num; j++) {\n            tmpKMeansBreaks.push(kClusters[j][0]);\n            tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\n        }\n        tmpKMeansBreaks = tmpKMeansBreaks.sort((a, b) => a - b);\n        limits.push(tmpKMeansBreaks[0]);\n        for (let i = 1; i < tmpKMeansBreaks.length; i += 2) {\n            const v = tmpKMeansBreaks[i];\n            if (!isNaN(v) && limits.indexOf(v) === -1) {\n                limits.push(v);\n            }\n        }\n    }\n    return limits;\n}\n","import Color from '../Color.js';\nimport '../ops/luminance.js';\n\nexport default (a, b) => {\n    // WCAG contrast ratio\n    // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n    a = new Color(a);\n    b = new Color(b);\n    const l1 = a.luminance();\n    const l2 = b.luminance();\n    return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n};\n","import Color from '../Color.js';\nimport mix from '../generator/mix.js';\n\n/**\n * @license\n *\n * The APCA contrast prediction algorithm is based of the formulas published\n * in the APCA-1.0.98G specification by Myndex. The specification is available at:\n * https://raw.githubusercontent.com/Myndex/apca-w3/master/images/APCAw3_0.1.17_APCA0.0.98G.svg\n *\n * Note that the APCA implementation is still beta, so please update to\n * future versions of chroma.js when they become available.\n *\n * You can read more about the APCA Readability Criterion at\n * https://readtech.org/ARC/\n */\n\n// constants\nconst W_offset = 0.027;\nconst P_in = 0.0005;\nconst P_out = 0.1;\nconst R_scale = 1.14;\nconst B_threshold = 0.022;\nconst B_exp = 1.414;\n\nexport default (text, bg) => {\n    // parse input colors\n    text = new Color(text);\n    bg = new Color(bg);\n    // if text color has alpha, blend against background\n    if (text.alpha() < 1) {\n        text = mix(bg, text, text.alpha(), 'rgb');\n    }\n    const l_text = lum(...text.rgb());\n    const l_bg = lum(...bg.rgb());\n\n    // soft clamp black levels\n    const Y_text =\n        l_text >= B_threshold\n            ? l_text\n            : l_text + Math.pow(B_threshold - l_text, B_exp);\n    const Y_bg =\n        l_bg >= B_threshold ? l_bg : l_bg + Math.pow(B_threshold - l_bg, B_exp);\n\n    // normal polarity (dark text on light background)\n    const S_norm = Math.pow(Y_bg, 0.56) - Math.pow(Y_text, 0.57);\n    // reverse polarity (light text on dark background)\n    const S_rev = Math.pow(Y_bg, 0.65) - Math.pow(Y_text, 0.62);\n    // clamp noise then scale\n    const C =\n        Math.abs(Y_bg - Y_text) < P_in\n            ? 0\n            : Y_text < Y_bg\n              ? S_norm * R_scale\n              : S_rev * R_scale;\n    // clamp minimum contrast then offset\n    const S_apc = Math.abs(C) < P_out ? 0 : C > 0 ? C - W_offset : C + W_offset;\n    // scale to 100\n    return S_apc * 100;\n};\n\nfunction lum(r, g, b) {\n    return (\n        0.2126729 * Math.pow(r / 255, 2.4) +\n        0.7151522 * Math.pow(g / 255, 2.4) +\n        0.072175 * Math.pow(b / 255, 2.4)\n    );\n}\n","import Color from '../Color.js';\nconst { sqrt, pow, min, max, atan2, abs, cos, sin, exp, PI } = Math;\n\nexport default function (a, b, Kl = 1, Kc = 1, Kh = 1) {\n    // Delta E (CIE 2000)\n    // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\n    var rad2deg = function (rad) {\n        return (360 * rad) / (2 * PI);\n    };\n    var deg2rad = function (deg) {\n        return (2 * PI * deg) / 360;\n    };\n    a = new Color(a);\n    b = new Color(b);\n    const [L1, a1, b1] = Array.from(a.lab());\n    const [L2, a2, b2] = Array.from(b.lab());\n    const avgL = (L1 + L2) / 2;\n    const C1 = sqrt(pow(a1, 2) + pow(b1, 2));\n    const C2 = sqrt(pow(a2, 2) + pow(b2, 2));\n    const avgC = (C1 + C2) / 2;\n    const G = 0.5 * (1 - sqrt(pow(avgC, 7) / (pow(avgC, 7) + pow(25, 7))));\n    const a1p = a1 * (1 + G);\n    const a2p = a2 * (1 + G);\n    const C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\n    const C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\n    const avgCp = (C1p + C2p) / 2;\n    const arctan1 = rad2deg(atan2(b1, a1p));\n    const arctan2 = rad2deg(atan2(b2, a2p));\n    const h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\n    const h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\n    const avgHp =\n        abs(h1p - h2p) > 180 ? (h1p + h2p + 360) / 2 : (h1p + h2p) / 2;\n    const T =\n        1 -\n        0.17 * cos(deg2rad(avgHp - 30)) +\n        0.24 * cos(deg2rad(2 * avgHp)) +\n        0.32 * cos(deg2rad(3 * avgHp + 6)) -\n        0.2 * cos(deg2rad(4 * avgHp - 63));\n    let deltaHp = h2p - h1p;\n    deltaHp =\n        abs(deltaHp) <= 180\n            ? deltaHp\n            : h2p <= h1p\n              ? deltaHp + 360\n              : deltaHp - 360;\n    deltaHp = 2 * sqrt(C1p * C2p) * sin(deg2rad(deltaHp) / 2);\n    const deltaL = L2 - L1;\n    const deltaCp = C2p - C1p;\n    const sl = 1 + (0.015 * pow(avgL - 50, 2)) / sqrt(20 + pow(avgL - 50, 2));\n    const sc = 1 + 0.045 * avgCp;\n    const sh = 1 + 0.015 * avgCp * T;\n    const deltaTheta = 30 * exp(-pow((avgHp - 275) / 25, 2));\n    const Rc = 2 * sqrt(pow(avgCp, 7) / (pow(avgCp, 7) + pow(25, 7)));\n    const Rt = -Rc * sin(2 * deg2rad(deltaTheta));\n    const result = sqrt(\n        pow(deltaL / (Kl * sl), 2) +\n            pow(deltaCp / (Kc * sc), 2) +\n            pow(deltaHp / (Kh * sh), 2) +\n            Rt * (deltaCp / (Kc * sc)) * (deltaHp / (Kh * sh))\n    );\n    return max(0, min(100, result));\n}\n","// some pre-defined color scales:\nimport chroma from '../chroma.js';\nimport '../io/hsl/index.js';\nimport scale from '../generator/scale.js';\n\nexport default {\n    cool() {\n        return scale([chroma.hsl(180, 1, 0.9), chroma.hsl(250, 0.7, 0.4)]);\n    },\n    hot() {\n        return scale(['#000', '#f00', '#ff0', '#fff'], [0, 0.25, 0.75, 1]).mode(\n            'rgb'\n        );\n    }\n};\n","/**\n    ColorBrewer colors for chroma.js\n\n    Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n    Pennsylvania State University.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software distributed\n    under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n    CONDITIONS OF ANY KIND, either express or implied. See the License for the\n    specific language governing permissions and limitations under the License.\n*/\n\nconst colorbrewer = {\n    // sequential\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n    // diverging\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n    // qualitative\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n};\n\nconst colorbrewerTypes = Object.keys(colorbrewer);\nconst typeMap = new Map(colorbrewerTypes.map((key) => [key.toLowerCase(), key]));\n\n// use Proxy to allow case-insensitive access to palettes\nconst colorbrewerProxy =\n    typeof Proxy === 'function'\n        ? new Proxy(colorbrewer, {\n              get(target, prop) {\n                  const lower = prop.toLowerCase();\n                  if (typeMap.has(lower)) {\n                      return target[typeMap.get(lower)];\n                  }\n              },\n              getOwnPropertyNames() {\n                  return Object.getOwnPropertyNames(colorbrewerTypes);\n              }\n          })\n        : colorbrewer;\n\nexport default colorbrewerProxy;\n","import { unpack } from '../../utils/index.js';\nconst { max } = Math;\n\nconst rgb2cmyk = (...args) => {\n    let [r, g, b] = unpack(args, 'rgb');\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    const k = 1 - max(r, max(g, b));\n    const f = k < 1 ? 1 / (1 - k) : 0;\n    const c = (1 - r - k) * f;\n    const m = (1 - g - k) * f;\n    const y = (1 - b - k) * f;\n    return [c, m, y, k];\n};\n\nexport default rgb2cmyk;\n","import chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport { unpack, type } from '../../utils/index.js';\nimport cmyk2rgb from './cmyk2rgb.js';\nimport rgb2cmyk from './rgb2cmyk.js';\n\nColor.prototype.cmyk = function () {\n    return rgb2cmyk(this._rgb);\n};\n\nconst cmyk = (...args) => new Color(...args, 'cmyk');\nObject.assign(chroma, { cmyk });\n\ninput.format.cmyk = cmyk2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'cmyk');\n        if (type(args) === 'array' && args.length === 4) {\n            return 'cmyk';\n        }\n    }\n});\n\nexport { cmyk };\n","import { unpack } from '../../utils/index.js';\n\nconst cmyk2rgb = (...args) => {\n    args = unpack(args, 'cmyk');\n    const [c, m, y, k] = args;\n    const alpha = args.length > 4 ? args[4] : 1;\n    if (k === 1) return [0, 0, 0, alpha];\n    return [\n        c >= 1 ? 0 : 255 * (1 - c) * (1 - k), // r\n        m >= 1 ? 0 : 255 * (1 - m) * (1 - k), // g\n        y >= 1 ? 0 : 255 * (1 - y) * (1 - k), // b\n        alpha\n    ];\n};\n\nexport default cmyk2rgb;\n","import { unpack, last, rnd2 } from '../../utils/index.js';\n\n/*\n * supported arguments:\n * - hsl2css(h,s,l)\n * - hsl2css(h,s,l,a)\n * - hsl2css([h,s,l], mode)\n * - hsl2css([h,s,l,a], mode)\n * - hsl2css({h,s,l,a}, mode)\n */\nconst hsl2css = (...args) => {\n    const hsla = unpack(args, 'hsla');\n    let mode = last(args) || 'lsa';\n    hsla[0] = rnd2(hsla[0] || 0) + 'deg';\n    hsla[1] = rnd2(hsla[1] * 100) + '%';\n    hsla[2] = rnd2(hsla[2] * 100) + '%';\n    if (mode === 'hsla' || (hsla.length > 3 && hsla[3] < 1)) {\n        hsla[3] = '/ ' + (hsla.length > 3 ? hsla[3] : 1);\n        mode = 'hsla';\n    } else {\n        hsla.length = 3;\n    }\n    return `${mode.substr(0, 3)}(${hsla.join(' ')})`;\n};\n\nexport default hsl2css;\n","import { unpack } from '../../utils/index.js';\nimport rgb2oklab from '../oklab/rgb2oklab.js';\nimport lab2lch from '../lch/lab2lch.js';\n\nconst rgb2oklch = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [l, a, b_] = rgb2oklab(r, g, b);\n    const [L, c, h] = lab2lch(l, a, b_);\n    return [L, c, h, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nexport default rgb2oklch;\n","import { unpack, last } from '../../utils/index.js';\nimport hsl2css from './hsl2css.js';\nimport rgb2hsl from '../hsl/rgb2hsl.js';\nimport lab2css from './lab2css.js';\nimport rgb2lab from '../lab/rgb2lab.js';\nimport lch2css from './lch2css.js';\nimport rgb2lch from '../lch/rgb2lch.js';\nimport rgb2oklab from '../oklab/rgb2oklab.js';\nimport oklab2css from './oklab2css.js';\nimport rgb2oklch from '../oklch/rgb2oklch.js';\nimport oklch2css from './oklch2css.js';\nimport { getLabWhitePoint, setLabWhitePoint } from '../lab/lab-constants.js';\nconst { round } = Math;\n\n/*\n * supported arguments:\n * - rgb2css(r,g,b)\n * - rgb2css(r,g,b,a)\n * - rgb2css([r,g,b], mode)\n * - rgb2css([r,g,b,a], mode)\n * - rgb2css({r,g,b,a}, mode)\n */\nconst rgb2css = (...args) => {\n    const rgba = unpack(args, 'rgba');\n    let mode = last(args) || 'rgb';\n    if (mode.substr(0, 3) === 'hsl') {\n        return hsl2css(rgb2hsl(rgba), mode);\n    }\n    if (mode.substr(0, 3) === 'lab') {\n        // change to D50 lab whitepoint since this is what W3C is using for CSS Lab colors\n        const prevWhitePoint = getLabWhitePoint();\n        setLabWhitePoint('d50');\n        const cssColor = lab2css(rgb2lab(rgba), mode);\n        setLabWhitePoint(prevWhitePoint);\n        return cssColor;\n    }\n    if (mode.substr(0, 3) === 'lch') {\n        // change to D50 lab whitepoint since this is what W3C is using for CSS Lab colors\n        const prevWhitePoint = getLabWhitePoint();\n        setLabWhitePoint('d50');\n        const cssColor = lch2css(rgb2lch(rgba), mode);\n        setLabWhitePoint(prevWhitePoint);\n        return cssColor;\n    }\n    if (mode.substr(0, 5) === 'oklab') {\n        return oklab2css(rgb2oklab(rgba));\n    }\n    if (mode.substr(0, 5) === 'oklch') {\n        return oklch2css(rgb2oklch(rgba));\n    }\n    rgba[0] = round(rgba[0]);\n    rgba[1] = round(rgba[1]);\n    rgba[2] = round(rgba[2]);\n    if (mode === 'rgba' || (rgba.length > 3 && rgba[3] < 1)) {\n        rgba[3] = '/ ' + (rgba.length > 3 ? rgba[3] : 1);\n        mode = 'rgba';\n    }\n    return `${mode.substr(0, 3)}(${rgba.slice(0, mode === 'rgb' ? 3 : 4).join(' ')})`;\n};\n\nexport default rgb2css;\n","import { unpack, last, rnd2 } from '../../utils/index.js';\n\n/*\n * supported arguments:\n * - lab2css(l,a,b)\n * - lab2css(l,a,b,alpha)\n * - lab2css([l,a,b], mode)\n * - lab2css([l,a,b,alpha], mode)\n */\nconst lab2css = (...args) => {\n    const laba = unpack(args, 'lab');\n    let mode = last(args) || 'lab';\n    laba[0] = rnd2(laba[0]) + '%';\n    laba[1] = rnd2(laba[1]);\n    laba[2] = rnd2(laba[2]);\n    if (mode === 'laba' || (laba.length > 3 && laba[3] < 1)) {\n        laba[3] = '/ ' + (laba.length > 3 ? laba[3] : 1);\n    } else {\n        laba.length = 3;\n    }\n    return `lab(${laba.join(' ')})`;\n};\n\nexport default lab2css;\n","import { unpack, last, rnd2 } from '../../utils/index.js';\n\n/*\n * supported arguments:\n * - lab2css(l,a,b)\n * - lab2css(l,a,b,alpha)\n * - lab2css([l,a,b], mode)\n * - lab2css([l,a,b,alpha], mode)\n */\nconst lch2css = (...args) => {\n    const lcha = unpack(args, 'lch');\n    let mode = last(args) || 'lab';\n    lcha[0] = rnd2(lcha[0]) + '%';\n    lcha[1] = rnd2(lcha[1]);\n    lcha[2] = isNaN(lcha[2]) ? 'none' : rnd2(lcha[2]) + 'deg'; // add deg unit to hue\n    if (mode === 'lcha' || (lcha.length > 3 && lcha[3] < 1)) {\n        lcha[3] = '/ ' + (lcha.length > 3 ? lcha[3] : 1);\n    } else {\n        lcha.length = 3;\n    }\n    return `lch(${lcha.join(' ')})`;\n};\n\nexport default lch2css;\n","import { unpack, rnd2, rnd3 } from '../../utils/index.js';\n\nconst oklab2css = (...args) => {\n    const laba = unpack(args, 'lab');\n    laba[0] = rnd2(laba[0] * 100) + '%';\n    laba[1] = rnd3(laba[1]);\n    laba[2] = rnd3(laba[2]);\n    if (laba.length > 3 && laba[3] < 1) {\n        laba[3] = '/ ' + (laba.length > 3 ? laba[3] : 1);\n    } else {\n        laba.length = 3;\n    }\n    return `oklab(${laba.join(' ')})`;\n};\n\nexport default oklab2css;\n","import { unpack, rnd2, rnd3 } from '../../utils/index.js';\n\nconst oklch2css = (...args) => {\n    const lcha = unpack(args, 'lch');\n    lcha[0] = rnd2(lcha[0] * 100) + '%';\n    lcha[1] = rnd3(lcha[1]);\n    lcha[2] = isNaN(lcha[2]) ? 'none' : rnd2(lcha[2]) + 'deg'; // add deg unit to hue\n    if (lcha.length > 3 && lcha[3] < 1) {\n        lcha[3] = '/ ' + (lcha.length > 3 ? lcha[3] : 1);\n    } else {\n        lcha.length = 3;\n    }\n    return `oklch(${lcha.join(' ')})`;\n};\n\nexport default oklch2css;\n","import { unpack } from '../../utils/index.js';\nimport lch2lab from '../lch/lch2lab.js';\nimport oklab2rgb from '../oklab/oklab2rgb.js';\n\nconst oklch2rgb = (...args) => {\n    args = unpack(args, 'lch');\n    const [l, c, h, ...rest] = args;\n    const [L, a, b_] = lch2lab(l, c, h);\n    const [r, g, b] = oklab2rgb(L, a, b_);\n    return [r, g, b, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nexport default oklch2rgb;\n","import hsl2rgb from '../hsl/hsl2rgb.js';\nimport lab2rgb from '../lab/lab2rgb.js';\nimport lch2rgb from '../lch/lch2rgb.js';\nimport oklab2rgb from '../oklab/oklab2rgb.js';\nimport oklch2rgb from '../oklch/oklch2rgb.js';\nimport input from '../input.js';\nimport limit from '../../utils/limit.js';\nimport { getLabWhitePoint, setLabWhitePoint } from '../lab/lab-constants.js';\n\nconst INT_OR_PCT = /((?:-?\\d+)|(?:-?\\d+(?:\\.\\d+)?)%|none)/.source;\nconst FLOAT_OR_PCT = /((?:-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)%?)|none)/.source;\nconst PCT = /((?:-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)%)|none)/.source;\nconst RE_S = /\\s*/.source;\nconst SEP = /\\s+/.source;\nconst COMMA = /\\s*,\\s*/.source;\nconst ANLGE = /((?:-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:deg)?)|none)/.source;\nconst ALPHA = /\\s*(?:\\/\\s*((?:[01]|[01]?\\.\\d+)|\\d+(?:\\.\\d+)?%))?/.source;\n\n// e.g. rgb(250 20 0), rgb(100% 50% 20%), rgb(100% 50% 20% / 0.5)\nconst RE_RGB = new RegExp(\n    '^rgba?\\\\(' +\n        RE_S +\n        [INT_OR_PCT, INT_OR_PCT, INT_OR_PCT].join(SEP) +\n        ALPHA +\n        '\\\\)$'\n);\nconst RE_RGB_LEGACY = new RegExp(\n    '^rgb\\\\(' +\n        RE_S +\n        [INT_OR_PCT, INT_OR_PCT, INT_OR_PCT].join(COMMA) +\n        RE_S +\n        '\\\\)$'\n);\nconst RE_RGBA_LEGACY = new RegExp(\n    '^rgba\\\\(' +\n        RE_S +\n        [INT_OR_PCT, INT_OR_PCT, INT_OR_PCT, FLOAT_OR_PCT].join(COMMA) +\n        RE_S +\n        '\\\\)$'\n);\n\nconst RE_HSL = new RegExp(\n    '^hsla?\\\\(' + RE_S + [ANLGE, PCT, PCT].join(SEP) + ALPHA + '\\\\)$'\n);\nconst RE_HSL_LEGACY = new RegExp(\n    '^hsl?\\\\(' + RE_S + [ANLGE, PCT, PCT].join(COMMA) + RE_S + '\\\\)$'\n);\nconst RE_HSLA_LEGACY =\n    /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\nconst RE_LAB = new RegExp(\n    '^lab\\\\(' +\n        RE_S +\n        [FLOAT_OR_PCT, FLOAT_OR_PCT, FLOAT_OR_PCT].join(SEP) +\n        ALPHA +\n        '\\\\)$'\n);\nconst RE_LCH = new RegExp(\n    '^lch\\\\(' +\n        RE_S +\n        [FLOAT_OR_PCT, FLOAT_OR_PCT, ANLGE].join(SEP) +\n        ALPHA +\n        '\\\\)$'\n);\nconst RE_OKLAB = new RegExp(\n    '^oklab\\\\(' +\n        RE_S +\n        [FLOAT_OR_PCT, FLOAT_OR_PCT, FLOAT_OR_PCT].join(SEP) +\n        ALPHA +\n        '\\\\)$'\n);\nconst RE_OKLCH = new RegExp(\n    '^oklch\\\\(' +\n        RE_S +\n        [FLOAT_OR_PCT, FLOAT_OR_PCT, ANLGE].join(SEP) +\n        ALPHA +\n        '\\\\)$'\n);\n\nconst { round } = Math;\n\nconst roundRGB = (rgb) => {\n    return rgb.map((v, i) => (i <= 2 ? limit(round(v), 0, 255) : v));\n};\n\nconst percentToAbsolute = (pct, min = 0, max = 100, signed = false) => {\n    if (typeof pct === 'string' && pct.endsWith('%')) {\n        pct = parseFloat(pct.substring(0, pct.length - 1)) / 100;\n        if (signed) {\n            // signed percentages are in the range -100% to 100%\n            pct = min + (pct + 1) * 0.5 * (max - min);\n        } else {\n            pct = min + pct * (max - min);\n        }\n    }\n    return +pct;\n};\n\nconst noneToValue = (v, noneValue) => {\n    return v === 'none' ? noneValue : v;\n};\n\nconst css2rgb = (css) => {\n    css = css.toLowerCase().trim();\n\n    if (css === 'transparent') {\n        return [0, 0, 0, 0];\n    }\n\n    let m;\n\n    if (input.format.named) {\n        try {\n            return input.format.named(css);\n            // eslint-disable-next-line\n        } catch (e) {}\n    }\n\n    // rgb(250 20 0) or rgb(250,20,0)\n    if ((m = css.match(RE_RGB)) || (m = css.match(RE_RGB_LEGACY))) {\n        let rgb = m.slice(1, 4);\n        for (let i = 0; i < 3; i++) {\n            rgb[i] = +percentToAbsolute(noneToValue(rgb[i], 0), 0, 255);\n        }\n        rgb = roundRGB(rgb);\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha; // default alpha\n        return rgb;\n    }\n\n    // rgba(250,20,0,0.4)\n    if ((m = css.match(RE_RGBA_LEGACY))) {\n        const rgb = m.slice(1, 5);\n        for (let i = 0; i < 4; i++) {\n            rgb[i] = +percentToAbsolute(rgb[i], 0, 255);\n        }\n        return rgb;\n    }\n\n    // hsl(0,100%,50%)\n    if ((m = css.match(RE_HSL)) || (m = css.match(RE_HSL_LEGACY))) {\n        const hsl = m.slice(1, 4);\n        hsl[0] = +noneToValue(hsl[0].replace('deg', ''), 0);\n        hsl[1] = +percentToAbsolute(noneToValue(hsl[1], 0), 0, 100) * 0.01;\n        hsl[2] = +percentToAbsolute(noneToValue(hsl[2], 0), 0, 100) * 0.01;\n        const rgb = roundRGB(hsl2rgb(hsl));\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha;\n        return rgb;\n    }\n\n    // hsla(0,100%,50%,0.5)\n    if ((m = css.match(RE_HSLA_LEGACY))) {\n        const hsl = m.slice(1, 4);\n        hsl[1] *= 0.01;\n        hsl[2] *= 0.01;\n        const rgb = hsl2rgb(hsl);\n        for (let i = 0; i < 3; i++) {\n            rgb[i] = round(rgb[i]);\n        }\n        rgb[3] = +m[4]; // default alpha = 1\n        return rgb;\n    }\n\n    if ((m = css.match(RE_LAB))) {\n        const lab = m.slice(1, 4);\n        lab[0] = percentToAbsolute(noneToValue(lab[0], 0), 0, 100);\n        lab[1] = percentToAbsolute(noneToValue(lab[1], 0), -125, 125, true);\n        lab[2] = percentToAbsolute(noneToValue(lab[2], 0), -125, 125, true);\n        // convert to D50 Lab whitepoint\n        const wp = getLabWhitePoint();\n        setLabWhitePoint('d50');\n        const rgb = roundRGB(lab2rgb(lab));\n        // convert back to original Lab whitepoint\n        setLabWhitePoint(wp);\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha;\n        return rgb;\n    }\n\n    if ((m = css.match(RE_LCH))) {\n        const lch = m.slice(1, 4);\n        lch[0] = percentToAbsolute(lch[0], 0, 100);\n        lch[1] = percentToAbsolute(noneToValue(lch[1], 0), 0, 150, false);\n        lch[2] = +noneToValue(lch[2].replace('deg', ''), 0);\n        // convert to D50 Lab whitepoint\n        const wp = getLabWhitePoint();\n        setLabWhitePoint('d50');\n        const rgb = roundRGB(lch2rgb(lch));\n        // convert back to original Lab whitepoint\n        setLabWhitePoint(wp);\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha;\n        return rgb;\n    }\n\n    if ((m = css.match(RE_OKLAB))) {\n        const oklab = m.slice(1, 4);\n        oklab[0] = percentToAbsolute(noneToValue(oklab[0], 0), 0, 1);\n        oklab[1] = percentToAbsolute(noneToValue(oklab[1], 0), -0.4, 0.4, true);\n        oklab[2] = percentToAbsolute(noneToValue(oklab[2], 0), -0.4, 0.4, true);\n        const rgb = roundRGB(oklab2rgb(oklab));\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha;\n        return rgb;\n    }\n\n    if ((m = css.match(RE_OKLCH))) {\n        const oklch = m.slice(1, 4);\n        oklch[0] = percentToAbsolute(noneToValue(oklch[0], 0), 0, 1);\n        oklch[1] = percentToAbsolute(noneToValue(oklch[1], 0), 0, 0.4, false);\n        oklch[2] = +noneToValue(oklch[2].replace('deg', ''), 0);\n        const rgb = roundRGB(oklch2rgb(oklch));\n        const alpha = m[4] !== undefined ? +percentToAbsolute(m[4], 0, 1) : 1;\n        rgb[3] = alpha;\n        return rgb;\n    }\n};\n\ncss2rgb.test = (s) => {\n    return (\n        // modern\n        RE_RGB.test(s) ||\n        RE_HSL.test(s) ||\n        RE_LAB.test(s) ||\n        RE_LCH.test(s) ||\n        RE_OKLAB.test(s) ||\n        RE_OKLCH.test(s) ||\n        // legacy\n        RE_RGB_LEGACY.test(s) ||\n        RE_RGBA_LEGACY.test(s) ||\n        RE_HSL_LEGACY.test(s) ||\n        RE_HSLA_LEGACY.test(s) ||\n        s === 'transparent'\n    );\n};\n\nexport default css2rgb;\n","import chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport { type } from '../../utils/index.js';\n\nimport rgb2css from './rgb2css.js';\nimport css2rgb from './css2rgb.js';\n\nColor.prototype.css = function (mode) {\n    return rgb2css(this._rgb, mode);\n};\n\nconst css = (...args) => new Color(...args, 'css');\nchroma.css = css;\n\ninput.format.css = css2rgb;\n\ninput.autodetect.push({\n    p: 5,\n    test: (h, ...rest) => {\n        if (!rest.length && type(h) === 'string' && css2rgb.test(h)) {\n            return 'css';\n        }\n    }\n});\n\nexport { css };\n","import Color from '../../Color.js';\nimport chroma from '../../chroma.js';\nimport input from '../input.js';\nimport { unpack } from '../../utils/index.js';\n\ninput.format.gl = (...args) => {\n    const rgb = unpack(args, 'rgba');\n    rgb[0] *= 255;\n    rgb[1] *= 255;\n    rgb[2] *= 255;\n    return rgb;\n};\n\nconst gl = (...args) => new Color(...args, 'gl');\nchroma.gl = gl;\n\nColor.prototype.gl = function () {\n    const rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n};\n\nexport { gl };\n","import Color from '../../Color.js';\nimport chroma from '../../chroma.js';\nimport { type } from '../../utils/index.js';\nimport input from '../input.js';\nimport hex2rgb from './hex2rgb.js';\nimport rgb2hex from './rgb2hex.js';\n\nColor.prototype.hex = function (mode) {\n    return rgb2hex(this._rgb, mode);\n};\n\nconst hex = (...args) => new Color(...args, 'hex');\nchroma.hex = hex;\n\ninput.format.hex = hex2rgb;\ninput.autodetect.push({\n    p: 4,\n    test: (h, ...rest) => {\n        if (\n            !rest.length &&\n            type(h) === 'string' &&\n            [3, 4, 5, 6, 7, 8, 9].indexOf(h.length) >= 0\n        ) {\n            return 'hex';\n        }\n    }\n});\n\nexport { hex };\n","/*\n * Based on implementation by Neil Bartlett\n * https://github.com/neilbartlett/color-temperature\n */\n\nconst { log } = Math;\n\nconst temperature2rgb = (kelvin) => {\n    const temp = kelvin / 100;\n    let r, g, b;\n    if (temp < 66) {\n        r = 255;\n        g =\n            temp < 6\n                ? 0\n                : -155.25485562709179 -\n                  0.44596950469579133 * (g = temp - 2) +\n                  104.49216199393888 * log(g);\n        b =\n            temp < 20\n                ? 0\n                : -254.76935184120902 +\n                  0.8274096064007395 * (b = temp - 10) +\n                  115.67994401066147 * log(b);\n    } else {\n        r =\n            351.97690566805693 +\n            0.114206453784165 * (r = temp - 55) -\n            40.25366309332127 * log(r);\n        g =\n            325.4494125711974 +\n            0.07943456536662342 * (g = temp - 50) -\n            28.0852963507957 * log(g);\n        b = 255;\n    }\n    return [r, g, b, 1];\n};\n\nexport default temperature2rgb;\n","/*\n * Based on implementation by Neil Bartlett\n * https://github.com/neilbartlett/color-temperature\n **/\n\nimport temperature2rgb from './temperature2rgb.js';\nimport { unpack } from '../../utils/index.js';\nconst { round } = Math;\n\nconst rgb2temperature = (...args) => {\n    const rgb = unpack(args, 'rgb');\n    const r = rgb[0],\n        b = rgb[2];\n    let minTemp = 1000;\n    let maxTemp = 40000;\n    const eps = 0.4;\n    let temp;\n    while (maxTemp - minTemp > eps) {\n        temp = (maxTemp + minTemp) * 0.5;\n        const rgb = temperature2rgb(temp);\n        if (rgb[2] / rgb[0] >= b / r) {\n            maxTemp = temp;\n        } else {\n            minTemp = temp;\n        }\n    }\n    return round(temp);\n};\n\nexport default rgb2temperature;\n","import chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport temperature2rgb from './temperature2rgb.js';\nimport rgb2temperature from './rgb2temperature.js';\n\nColor.prototype.temp =\n    Color.prototype.kelvin =\n    Color.prototype.temperature =\n        function () {\n            return rgb2temperature(this._rgb);\n        };\n\nconst temp = (...args) => new Color(...args, 'temp');\nObject.assign(chroma, { temp, kelvin: temp, temperature: temp });\n\ninput.format.temp =\n    input.format.kelvin =\n    input.format.temperature =\n        temperature2rgb;\n\nexport { temp, temp as kelvin, temp as temperature };\n","import { unpack, type } from '../../utils/index.js';\nimport chroma from '../../chroma.js';\nimport Color from '../../Color.js';\nimport input from '../input.js';\nimport oklch2rgb from './oklch2rgb.js';\nimport rgb2oklch from './rgb2oklch.js';\n\nColor.prototype.oklch = function () {\n    return rgb2oklch(this._rgb);\n};\n\nconst oklch = (...args) => new Color(...args, 'oklch');\nObject.assign(chroma, { oklch });\n\ninput.format.oklch = oklch2rgb;\n\ninput.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, 'oklch');\n        if (type(args) === 'array' && args.length === 3) {\n            return 'oklch';\n        }\n    }\n});\n\nexport { oklch };\n","// feel free to comment out anything to rollup\n// a smaller chroma.js bundle\nimport chroma from './src/chroma.js';\n\n// io --> convert colors\nimport './src/io/named/index.js';\n\n// operators --> modify existing Colors\nimport './src/ops/alpha.js';\nimport './src/ops/clipped.js';\nimport './src/ops/darken.js';\nimport './src/ops/get.js';\nimport './src/ops/luminance.js';\nimport './src/ops/mix.js';\nimport './src/ops/premultiply.js';\nimport './src/ops/saturate.js';\nimport './src/ops/set.js';\nimport './src/ops/shade.js';\n\n// interpolators\nimport './src/interpolator/rgb.js';\nimport './src/interpolator/lrgb.js';\nimport './src/interpolator/lab.js';\nimport './src/interpolator/lch.js';\nimport './src/interpolator/num.js';\nimport './src/interpolator/hcg.js';\nimport './src/interpolator/hsi.js';\nimport './src/interpolator/hsl.js';\nimport './src/interpolator/hsv.js';\nimport './src/interpolator/oklab.js';\nimport './src/interpolator/oklch.js';\n\n// generators -- > create new colors\nimport average from './src/generator/average.js';\nimport bezier from './src/generator/bezier.js';\nimport blend from './src/generator/blend.js';\nimport cubehelix from './src/generator/cubehelix.js';\nimport mix from './src/generator/mix.js';\nimport random from './src/generator/random.js';\nimport scale from './src/generator/scale.js';\n\n// other utility methods\nimport { analyze } from './src/utils/analyze.js';\nimport contrast from './src/utils/contrast.js';\nimport contrastAPCA from './src/utils/contrastAPCA.js';\nimport deltaE from './src/utils/delta-e.js';\nimport distance from './src/utils/distance.js';\nimport { limits } from './src/utils/analyze.js';\nimport valid from './src/utils/valid.js';\nimport input from './src/io/input.js';\n\n// scale\nimport scales from './src/utils/scales.js';\n\n// colors\nimport colors from './src/colors/w3cx11.js';\nimport brewer from './src/colors/colorbrewer.js';\nimport Color from './src/Color.js';\n\nObject.assign(chroma, {\n    analyze,\n    average,\n    bezier,\n    blend,\n    brewer,\n    Color,\n    colors,\n    contrast,\n    contrastAPCA,\n    cubehelix,\n    deltaE,\n    distance,\n    input,\n    interpolate: mix,\n    limits,\n    mix,\n    random,\n    scale,\n    scales,\n    valid\n});\n\nexport default chroma;\n\nexport {\n    analyze,\n    average,\n    bezier,\n    blend,\n    brewer,\n    Color,\n    colors,\n    contrast,\n    contrastAPCA,\n    cubehelix,\n    deltaE,\n    distance,\n    input,\n    limits,\n    mix,\n    mix as interpolate,\n    random,\n    scale,\n    scales,\n    valid\n};\n\nexport * from './src/io/cmyk/index.js';\nexport * from './src/io/css/index.js';\nexport * from './src/io/gl/index.js';\nexport * from './src/io/hcg/index.js';\nexport * from './src/io/hex/index.js';\nexport * from './src/io/hsi/index.js';\nexport * from './src/io/hsl/index.js';\nexport * from './src/io/hsv/index.js';\nexport * from './src/io/lab/index.js';\nexport * from './src/io/lch/index.js';\nexport * from './src/io/num/index.js';\nexport * from './src/io/rgb/index.js';\nexport * from './src/io/temp/index.js';\nexport * from './src/io/oklab/index.js';\nexport * from './src/io/oklch/index.js';\n","import Color from '../Color.js';\n\n// simple Euclidean distance\nexport default function (a, b, mode = 'lab') {\n    // Delta E (CIE 1976)\n    // see http://www.brucelindbloom.com/index.html?Equations.html\n    a = new Color(a);\n    b = new Color(b);\n    const l1 = a.get(mode);\n    const l2 = b.get(mode);\n    let sum_sq = 0;\n    for (let i in l1) {\n        const d = (l1[i] || 0) - (l2[i] || 0);\n        sum_sq += d * d;\n    }\n    return Math.sqrt(sum_sq);\n}\n","import Color from '../Color.js';\n\nexport default (...args) => {\n    try {\n        new Color(...args);\n        return true;\n        // eslint-disable-next-line\n    } catch (e) {\n        return false;\n    }\n};\n","import chroma from \"chroma-js\";\r\n\r\nconst baseGreen = '#33691E';\r\nconst baseRed = '#B71C1C';\r\nconst white = '#FFFFFF';\r\n\r\nexport default class CalcColors {\r\n    constructor(data) {\r\n        this.maxPositive = Math.max(\r\n            ...data.map(d => d.regularMarketChangePercent)\r\n        );\r\n        this.maxNegative = Math.min(\r\n            ...data.map(d => d.regularMarketChangePercent)\r\n        );\r\n        this.minFactor = 0.1; \r\n    }\r\n\r\n    getColor (percent) {\r\n        if (percent > 0) {\r\n            const factor = Math.max(percent / this.maxPositive, this.minFactor);\r\n            return chroma.mix(white, baseGreen, factor).hex();\r\n        } else if (percent < 0) {\r\n            const factor = Math.max(Math.abs(percent / this.maxNegative), this.minFactor);\r\n            return chroma.mix(white, baseRed, factor).hex();\r\n        }\r\n        return white;\r\n    };\r\n}","import Graph from \"./Graph\"\nimport { normalize } from \"./Helpers/NormalizeData\";\n\nwindow.addEventListener(\"load\", initialize);\nwindow.addEventListener(\"resize\", resizeCanvas);\n\nconst canva = document.getElementById('chart')\nlet graph = null;\nlet cachedData = null;\n\nfunction initialize () {\n    resizeCanvas();\n    fetchData();\n}\n\nfunction resizeCanvas() {\n    canva.width = window.innerWidth;\n    canva.height = window.innerHeight;\n\n    if (graph && cachedData) {\n        graph.render()\n    }\n}\n\nconst fetchData = () => {\n    const empresas = ['PETR4', 'VALE3', 'ITUB4', 'BBDC4', 'ABEV3', 'BBAS3', 'B3SA3', 'WEGE3', 'RENT3', 'ITSA4'];\n    const getApiUrl = query => `https://b3api.me/api/quote/${query}`\n    const generatePromises = () => empresas.map(element =>\n        fetch(getApiUrl(element))\n            .then(response => response.json())\n        )\n    Promise.all(generatePromises())\n        .then(results => normalize(results))\n        .then(data => {\n            cachedData = data\n            graph = new Graph(canva, data)\n            graph.render()\n        })\n}\n","import Value from \"../Model/Value\"\r\nimport CalcColors from \"./CalcColors\"\r\n\r\nexport function normalize (data, order = true) {\r\n    const calcColors = new CalcColors(data)\r\n    let ordenedData\r\n    if (!!order) {\r\n        ordenedData = data.sort((b, a) => a.regularMarketVolume - b.regularMarketVolume)\r\n    }\r\n\r\n    const normalizedData = ordenedData.map(element => {\r\n        return new Value(\r\n            element.longName,\r\n            element.symbol,\r\n            element.regularMarketVolume,\r\n            element.regularMarketChangePercent,\r\n            calcColors.getColor(element.regularMarketChangePercent)\r\n        )\r\n    });\r\n    return normalizedData;\r\n}\r\n"],"names":["Direction","name","_classCallCheck","this","key","value","_defineProperty","_Direction","Point","x","arguments","length","undefined","y","secondPoint","calcArea","CanvaFacade","canva","context","getContext","drawnArea","startPoint","endPoint","getDimensions","newPoint","width","height","dimensions","rect","fillStyle","color","fillRect","strokeStyle","strokeRect","data","drawLegend","text","getTitle","fontSize","font","concat","textWidth","measureText","calcFont","textAlign","textBaseline","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","centerX","centerY","fillText","percentageFontSize","Math","max","includes","lineSpacing","getPercentageStr","Rect","_createClass","DataRect","_Rect","_this","_inherits","calcMiddlePointLeftToRight","area","initialPointer","endPointer","recalcStartPointLeftToRight","calcMiddlePointUpToDown","recalcStartPointUpToDown","Value","symbol","percentage","obj","substring","toFixed","Node","_children","_data","child","push","addChild","filteredChildren","filter","at","getLastRoot","ans","forEach","sum","Tree","root","direction","leftToRight","depth","getData","depths","getChild","map","el","getDepth","apply","_toConsumableArray","_sum","nextDirection","upToDown","leftRootArr","getLeft","leftRoot","rightRoot","getRight","left","right","tree","dataSet","JSON","parse","stringify","buildFromObject","dataSum","reduce","sumLimit","currentNodeData","dataSumLoop","element","shift","addChildByData","Graph","buildFromArray","drawRect","console","log","currentTree","canvasArea","getArea","slicedTree","sliceTree","middlePoint","newStartPoint","calcPercentage","renderTree","setStartPoint","resetCanva","renderTreeLeftToRight","renderTreeUpToDown","getDrawCoordinatesToTreeLeftToRight","_this2","getDrawCoordinatesToTreeUpToDown","_this3","areaCanva","currentPoint","node","areaNode","endPointSquare","_this4","min","low","high","rgb","_clipped","_unclipped","slice","i","limit","classToType","toLowerCase","Object","prototype","toString","call","args","keyOrder","Array","type","split","k","l","PI","rnd2","a","round","rnd3","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","reverse3","arr","reverse","format","autodetect","constructor","me","mode","last","sorted","sort","b","p","chk","test","Error","_rgb","clip_rgb","hex","join","chroma","version","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","RE_HEX","RE_HEXA","match","substr","u","parseInt","r","g","unpack","str","hxa","n","keys","input","named","h","rest","alpha","mutate","clipped","labConstants","Kn","labWhitePoint","Xn","Yn","Zn","t0","t1","t2","t3","kE","kKE","kK","RefWhiteRGB","X","Y","Z","MtxRGB2XYZ","m00","m01","m02","m10","m11","m12","m20","m21","m22","MtxXYZ2RGB","As","Bs","Cs","MtxAdaptMa","MtxAdaptMaI","ILLUMINANTS","Map","setLabWhitePoint","ill","get","String","getLabWhitePoint","compand","linear","sign","abs","pow","xyz2rgb","z","Ad","Bd","Cd","X1","Y1","Z1","X2","Y2","Z2","L","fy","fx","fz","fx3","fz3","lab2xyz","b_","gammaAdjustSRGB","companded","rgb2xyz","xr","yr","zr","xyz2lab","lab","assign","darken","amount","brighten","darker","brighter","mc","channel","src","indexOf","luminance","lum","cur_lum","max_iter","mid","interpolate","lm","rgb2luminance","luminance_x","col1","col2","f","interpolator","mix","premultiply","sin","cos","c","isNaN","sqrt","atan2","Number","NaN","lch","hcl","m","saturate","desaturate","set","charAt","out","tint","shade","xyz0","xyz1","lrgb","x1","y1","z1","x2","y2","z2","hue0","hue1","sat0","sat1","lbv0","lbv1","sat","hue","lbv","dh","hsl","hsv","hcg","hsi","oklch","num","c1","c2","floor","minRgb","maxRgb","delta","_g","_c","q","t","v","min_","s","acos","h_","max_","rgb2hsv","multiplyMatrices","A","B","isArray","B_cols","_","product","row","col","LMStoXYZ","LMSnl","XYZ","LMS","cbrt","XYZ_to_OKLab","oklab","colors","_mode","_nacol","_spread","_domain","_pos","_padding","_classes","_colors","_out","_min","_max","_correctLightness","_colorCache","_useCache","_gamma","setColors","brewer","resetCache","tMapLightness","tMapDomain","getColor","val","bypassMap","getClass","classes","d","analyze","limits","domain","from","tOut","tBreaks","every","_m","range","_o","spread","correctLightness","L0","L1","pol","L_actual","L_ideal","L_diff","padding","numColors","result","dm","dd","ascending","end","__range__","samples","asc","cache","gamma","nodata","rnd","rgba","blend","bottom","top","blend_f","c0","each","normal","multiply","screen","overlay","lighten","dodge","burn","MAX_VALUE","values","count","min_log","LOG10E","max_log","pb","pr","cluster","assignments","clusterSizes","repeat","nb_iters","centroids","j","best","mindist","dist","newCentroids","kClusters","tmpKMeansBreaks","B_threshold","cool","scale","hot","colorbrewer","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","colorbrewerTypes","typeMap","Proxy","target","prop","lower","has","getOwnPropertyNames","cmyk","hsla","prevWhitePoint","cssColor","laba","lcha","INT_OR_PCT","source","FLOAT_OR_PCT","PCT","RE_S","SEP","COMMA","ANLGE","ALPHA","RE_RGB","RegExp","RE_RGB_LEGACY","RE_RGBA_LEGACY","RE_HSL","RE_HSL_LEGACY","RE_HSLA_LEGACY","RE_LAB","RE_LCH","RE_OKLAB","RE_OKLCH","roundRGB","percentToAbsolute","pct","signed","endsWith","parseFloat","noneToValue","noneValue","css2rgb","css","trim","e","replace","wp","gl","kelvin","temp","temperature","minTemp","maxTemp","average","weights","w","xyz","_average_lrgb","first","cnt","dx","dy","ci","xyz2","bezier","I","lab0","lab1","lab2","lab3","RangeError","labs","newrow","binom_row","Color","contrast","l1","l2","contrastAPCA","bg","l_text","l_bg","Y_text","Y_bg","S_norm","S_rev","C","cubehelix","start","rotations","lightness","dl","fract","amp","cos_a","sin_a","deltaE","Kl","Kc","Kh","rad2deg","rad","deg2rad","deg","a1","b1","L2","a2","b2","avgL","avgC","G","a1p","a2p","C1p","C2p","avgCp","arctan1","arctan2","h1p","h2p","avgHp","T","deltaHp","deltaL","deltaCp","sl","sc","sh","deltaTheta","exp","Rt","distance","sum_sq","random","code","scales","valid","CalcColors","maxPositive","regularMarketChangePercent","maxNegative","minFactor","percent","factor","window","addEventListener","resizeCanvas","fetchData","document","getElementById","graph","cachedData","innerWidth","innerHeight","render","Promise","all","fetch","query","then","response","json","results","ordenedData","order","calcColors","regularMarketVolume","longName","normalize"],"sourceRoot":""}